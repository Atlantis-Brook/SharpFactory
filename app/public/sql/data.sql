INSERT INTO `blog` (`id`, `user_id`,`user`, `title`, `visits`, `markdown`, `synopsis`, `html`, `update_html`, `created_at`, `updated_all`) VALUES
	(1, 1001,'vata', '小案例', NULL, '## JavaScript轮播图\r\n\r\n- 思路：设定一个div作为显示框，在框内添加一个超长的ul包裹图片，把每张图片的大小设置为div显示框的大小，设置css属性使第一张图片位于div显示框内，并且给div显示框设置overflow：hidden，把其他图片全部隐藏。js设置定时器，每隔3000毫秒ul向右移动一张图片的宽度。\r\n\r\n  \r\n\r\n  先写HTML代码 :\r\n\r\n  ```html\r\n  <!DOCTYPE html>\r\n  <html lang="en">\r\n  <head>\r\n      <meta charset="UTF-8">\r\n      <title>Document</title>\r\n      <link rel="stylesheet" href="./index.css">\r\n      <script src="./index.js"></script>\r\n  </head>\r\n  <body>\r\n      <div class="lbt">\r\n          <ul style="left: 0px">\r\n              <li><img class="img1" src="./pic/pic1.jpg" alt="pic"></li>\r\n              <li><img class="img2" src="./pic/pic2.jpg" alt="pic"></li>\r\n              <li><img class="img3" src="./pic/pic3.gif" alt="pic"></li>\r\n              <li><img class="img4" src="./pic/pic4.jpg" alt="pic"></li>\r\n              <li><img class="img5" src="./pic/pic5.jpg" alt="pic"></li>\r\n          </ul>\r\n      </div>\r\n  </body>\r\n  </html>\r\n  ```\r\n\r\n  \r\n\r\ncss样式：\r\n\r\n```css\r\n*{\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.lbt{\r\n    margin: 82px auto 0;\r\n    position: relative;\r\n    width: 800px;\r\n    height: 400px;\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.lbt ul{\r\n    position: absolute;\r\n    display: block;\r\n    top: 0;\r\n    width: 4000px;\r\n    height: 400px;\r\n}\r\n\r\n.lbt li{\r\n    float: left;\r\n    width: 800px;\r\n    height: 400px;\r\n}\r\n\r\n.lbt img{\r\n    width: 800px;\r\n    height: 400px;\r\n}\r\n```\r\n\r\n我们通过使用div显示框(.lbt) position：relative和ul的position：absolute进行定位，使轮播图的第一张图片刚好位于div显示框(.lbt)上。\r\n\r\n\r\n\r\n效果如下：\r\n\r\n\r\n\r\n![p][1]\r\n\r\n\r\n\r\n接下来写JavaScript代码：\r\n\r\n```javascript\r\nvar ul = document.getElementsByTagName(\'ul\');  //获取一个元素组\r\nvar i = 0;   //用于计数\r\nsetInterval(function (){\r\n    //添加定时器Interval\r\n    if(i == 4){\r\n        //当轮播到第六张图片时，回到第一张图片\r\n        ul[0].style.left = \'0px\';\r\n        i=0;\r\n    }else{\r\n        ul[0].style.left = (parseInt(ul[0].style.left) - 800) + \'px\'; //每过3000ms执行ul向左移动一张图片的距离    \r\n    }\r\n    i++;\r\n},3000);\r\n```\r\n\r\n\r\n\r\n***\r\n\r\n##### 易混淆点：\r\n\r\n1. 当使用position来定位时，left必须写为行间样式，因为行JavaScript的***ul[0].style*** 只能获取行间样式信息，引入css样式无法查看。\r\n\r\n2. 使用setInterval()定时器，第一次执行是等待3000ms后，所以为3000ms后left = -800px，所以执行播放第二张图，在 *i++* 执行以前，i = 0。即：\r\n\r\n   **图片**			**i**\r\n\r\n   pic1				0\r\n\r\n   pic2				0\r\n\r\n   pic3				1\r\n\r\n   pic4				2\r\n\r\n   pic5				3\r\n\r\n   \r\n\r\n   所以当i==4时，已经没有pic6可供展示，直接跳回最开始的pic1。\r\n\r\n   \r\n\r\n   -- 不会接gif图片，所以没有效果图了，抱歉！--\r\n\r\n   \r\n\r\n[1]: ./1.png\r\n\r\n', NULL, NULL, NULL, '2019-04-26 20:22:23', '2019-04-29 15:25:32'),
	(2, 1001, 'vata', 'css之position定位', NULL, '\r\n\r\n> **position: static**\r\n\r\n&nbsp; &nbsp;  默认值，标签会占据网页的一定的空间，且不会受到top，bottom，left，right等元素的影响。\r\n\r\n > **position: fixed**\r\n \r\n&nbsp; &nbsp; 标签不会占用所在网页的空间，且该标签不会随着网页滚动条的滚动而改变位置。即该标签悬浮于网页上方，不会受到网页的影响。\r\n	\r\n> **position: relative**\r\n\r\n&nbsp; &nbsp; 标签会占据网页一定的空间。标签的top，bottom，left，right等值可以定义为负值，此情况下标签会超出网页移动，超出网页的内容将被遮盖。\r\n	\r\n> **position: absolute**\r\n\r\n&nbsp; &nbsp; 标签不会占据网页的空间。此定位方式是根据父标签（包围此标签的上一级标签）或html（没有父标签的情况）定位的，标签会与网页内容重合(必须设定top、bottom、 left、right其中一个元素，否则还是会遵循文本流)。\r\n	\r\n> **position: sticky**\r\n\r\n&nbsp; &nbsp; 标签会占据网页一定的空间。 当滚动网页下移时，与position：fixed一样。top，bottom，left，right可以定义为负值，滚动后可如position：relative一样显示。如top=-10px时，网页下滑，该标签将会有10px的内容被上边框覆盖。', NULL, NULL, NULL, '2019-04-26 20:23:16', '2019-04-29 15:25:24'),
	(3, 1003, 'vata', 'sharpfactory SQL规则文档', NULL, '# SharpFactory官网数据结构\r\n\r\n## 界面数据\r\n\r\n* 展示图片 -- VARCHAR(URL)\r\n* 文字信息 -- VARCHAR\r\n\r\n## blog数据\r\n\r\n* synopsis -- TEXT\r\n* markdown -- TEXT\r\n* html - TEXT\r\n* title -- VARCHAR\r\n* update_at -- CURRENT_TIMESTAMP\r\n* update_all -- CURRENT_TIMESTAMP\r\n* update_html -- DATETIME\r\n\r\n## 用户数据\r\n\r\n* usr -- VARCHAR\r\n* password -- BIGVARCHAR\r\n* salt -- VARCHAR\r\n* id -- INT\r\n* email -- VARCHAR\r\n* urlNavigationData -- 此为一个数据集合，具体数据类型待定\r\n\r\n## 论坛数据\r\n\r\n* id -- INT\r\n* name -- VARCHAR\r\n* ip -- BIGINT(转换)\r\n* content -- TEXT\r\n* time -- CURRENT_TIMESTAMP\r\n\r\n## 承接项目数据\r\n\r\n* content -- TEXT\r\n* id -- INT\r\n* time -- CURRENT_TIMESTAMP\r\n* phone -- BIGINT\r\n* email -- VARCHAR\r\n* readmeText -- VARCHAR(URL)\r\n\r\n## 网址导航数据\r\n\r\n* category -- VARCHAR\r\n* websiteUrl -- VARCHAR(URL)\r\n* wallpaper -- VARCHAR(URL)\r\n\r\n\r\n\r\n### 本文中尚未提及的数据类型均为待定，视实际情况而定', NULL, NULL, NULL, '2019-04-26 20:25:20', '2019-04-26 20:25:20'),
	(4, 1005,'vata',  'JavaScript 关于全局和局部变量', NULL, '<font color=#ff0000 face="黑体">js会提前对声明的部分做完整的分析，之后再按顺序执行代码。</font>\r\n\r\n* 例一\r\n```\r\nvar a= 100;\r\nfunction asd(){\r\n    alert(a);\r\n}\r\n\r\nasd();\r\n```\r\n结果：\r\n> 100\r\n\r\n* 例二\r\n\r\n```\r\nvar a= 100;\r\nfunction asd(){\r\n    alert(a);\r\n    var a=123;\r\n    alert(a);\r\n}\r\n\r\nasd();\r\n```\r\n结果：\r\n> undefined  123\r\n \r\n **例题说明**：在js对声明部分进行分析时，对`var a= 123；`这行代码的声明部分进行分析，判定asd()函数中有局部变量被声明，所以没有显示第一行声明的全局变量的值。\r\n \r\n```\r\nvar a= 123；\r\n```\r\n等价于：\r\n```\r\nvar a；//这句代码被提前分析\r\na= 123；这句代码没有执行\r\n```\r\n所以输出的只会等于undefined，而不是123；第二次输出才会等于123；\r\n·\r\n·\r\n·\r\n*注意：在函数中声明变量，使用var关键字声明的是局部变量，没有用的是全局变量。*', NULL, NULL, NULL, '2019-04-27 11:26:09', '2019-04-29 15:27:40'),
	(5, 1018,'vata',  '局域网和ip', NULL, '# 局域网和IP\r\n\r\n### IPv4\r\n\r\nIPv4是由32个二进制数组成（即四段，每段八个）\r\n\r\n| 主类网          | 网络位                       | 主机位                       |\r\n| :-------------- | :--------------------------- | :--------------------------- |\r\n| A类（0~127）    | 前八位（第一段）             | 后二十四位（第二、三、四段） |\r\n| B类（128~191）  | 前十六位（第一、二段）       | 后十六位（第三、四段）       |\r\n| C类（192~223）  | 前二十四位（第一、二、三段） | 后八位（第四段）             |\r\n| D类（组播地址） | ---                          | ---                          |\r\n| D类（保留）     | ---                          | ---                          |\r\n\r\n\r\n\r\n特殊的IP地址：\r\n\r\n1. 网络位不变，主机位全为0：    表示网络地址（网段范围）             192.168.1.0\r\n2. 网络位不变，主机位全为1：    表示子网广播地址（所有主机）     192.168.1.255\r\n3. 网络位和主机位全为0：    表示默认路由/缺省路由（所有网络）    0.0.0.0\r\n4. 网络位和主机位全为1：    表示全网广播地址                                    255.255.255.255\r\n5. 网络位为127，主机地址任意：    表示换回地址                               127.0.0.1\r\n\r\n\r\n\r\n私有IP地址：（可以自己通过交换机和路由器搭局域网）\r\n\r\nA：10.0.0.0 ~ 10.255.255.255\r\n\r\nB：172.16.0.0 ~ 172.31.255.255\r\n\r\nC：192.168.0.0 ~ 192.168.255.255', NULL, NULL, NULL, '2019-04-28 22:17:45', '2019-04-28 22:17:45'),
	(6, 1013,'vata',  'mysql存储引擎', NULL, '首先线要了解：\r\n\r\n- 事务：事务是指单个逻辑工作单元的一系列操作，要么完全执行，要么不执行\r\n- 外键：关联两张数据表的一列数据\r\n- 文件后缀：\r\n  - .frm  存储表结构和信息（该表有多少列，每列的名字）\r\n  - .MYD  存储数据\r\n  - .MYI  存储索引\r\n\r\n\r\n\r\n存储引擎：\r\n\r\n- MyISAM：不支持事务，不支持外键，但是访问速度特别快\r\n- INNODB：提供了提交，回滚和崩溃恢复能力的事务安全，相对效率低，占内存大\r\n- MEMORY：使用内存存储数据，访问非常快，但是服务器如果关闭，数据就会丢失（只有一张空的表文件  xx.frm ）。', NULL, NULL, NULL, '2019-04-28 22:18:27', '2019-04-28 22:18:27'),
	(7, 1002, 'vata', 'Vue Component', NULL, '## vue学习笔记 ---- component组件\r\n\r\n- 创建全局组件\r\n\r\n  ```html\r\n  <div id="myID">\r\n  	<mydiv></mydiv>\r\n  </div>\r\n  \r\n  	<script>\r\n  		// 注册\r\n  		Vue.component(\'mydiv\', {\r\n   			template: \'<div>自定义组件!</div>\'\r\n  		});\r\n  		// 创建根实例\r\n  		new Vue({\r\n    			el: \'#myID\'\r\n  		});\r\n  </script>\r\n  ```\r\n\r\n- 创建局部组件\r\n\r\n  ```html\r\n  <div id="myID">\r\n  	<runoob></runoob>\r\n  </div>\r\n  \r\n  <script>\r\n  \r\n  // 创建根实例\r\n  new Vue({\r\n    el: \'#myID\',\r\n    components: {\r\n      // <mydiv> 将只在#myID元素内可用\r\n      \'runoob\': {\r\n    		template: \'<div>自定义组件!</div>\'\r\n  	}\r\n    }\r\n  })\r\n  </script>\r\n  ```\r\n\r\n  ', NULL, NULL, NULL, '2019-04-29 15:20:10', '2019-04-29 15:20:10'),
	(8, 1007,'vata',  'sass学习笔记', NULL, '### WEB前端开发 ------ sass学习笔记\r\n\r\n***\r\n\r\n##### - 预处理器的功能\r\n\r\n- 可以创建变量\r\n\r\n\r\n\r\n**一、变量应用：**\r\n\r\n- 命名规则：$name: value\r\n\r\n  ```scss\r\n  $border-color: #000;  \r\n  ```\r\n\r\n- 变量引用\r\n\r\n  ```scss\r\n  $border-color: #000;\r\n  \r\n  div{\r\n      border: 1px solid $border-color;\r\n  }\r\n  ```\r\n\r\n- **注意事项**\r\n\r\n  - 在命名变量时，**_** (下划线) 和 **-** (中划线) 是一样的，没有区别，喜欢怎么用看个性\r\n\r\n  - 变量的值也可以有变量\r\n\r\n    ```scss\r\n    $background-color: #ccc;\r\n    \r\n    $border: 1px solid $background-color;\r\n    \r\n    div{\r\n        border: $border;\r\n    }\r\n    ```\r\n\r\n  - 变量可以局部创建也可以全局创建，但是局部变量只能在局部有效，全局变量则整篇内容都有效。\r\n\r\n    ```scss\r\n    #border-color: #ccc; /* 全局有效 */\r\n    \r\n    div{\r\n        $size: 2px; /* 只在div{}内有效 */\r\n        border: $size solid $border-color;\r\n    }\r\n    ```\r\n\r\n**二、嵌套css规则**\r\n\r\n- 父选择器（&）的使用\r\n\r\n  - 当我们要添加伪类:hover时，可以使用父选择器（&）\r\n\r\n    ```scss\r\n    div a{\r\n        color: #000;\r\n        &:hover{\r\n            color: #f00;\r\n        }\r\n    }\r\n    ```\r\n\r\n    父选择器指代div下的a标签，即\r\n\r\n    ```scss\r\n    div a {\r\n        color: #000;\r\n    }\r\n    \r\n    article a:hover { \r\n        color: #f00;\r\n    }\r\n    \r\n    /*\r\n    没有添加父类选择器（&）：意义为div下a标签下的所有子标签都会添加上:hover.（a和:hover之间的空格表示子选择器，稍后说明）\r\n    \r\n    div a {\r\n        color: #000;\r\n    }\r\n    \r\n    article a :hover { 		\r\n        color: #f00;   \r\n    }\r\n    */\r\n    ```\r\n\r\n- 群组选择器\r\n\r\n  - 多个标签同时对应一个css，可以通过群组选择器（,）连接，即逗号连接，表示多种情况\r\n\r\n    ```scss\r\n    .button1, .button2, .button3{\r\n        width: 45px;\r\n        height: 24px;\r\n    }\r\n    ```\r\n\r\n- 子组合选择器，同层组合选择器\r\n\r\n  - 子组合选择器\r\n\r\n    - 箭头（>）\r\n\r\n      ```scss\r\n      div>a{\r\n          /* 表示div下的 第一层标签 中所有的a标签 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n      \r\n\r\n    - 空格\r\n\r\n      ```scss\r\n      div a{\r\n          /* 表示div下的 所有 的a标签 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n  - 同层组合选择器\r\n\r\n    - 加号（+）\r\n\r\n      ```scss\r\n      div+a{\r\n          /* 表示div后相邻着的a标签 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n      \r\n\r\n    - ~\r\n\r\n      ```scss\r\n      div~a{\r\n          /* 表示div后的所有的a标签，不管相不相邻 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n- 嵌套属性\r\n\r\n  ```scss\r\n  background: {\r\n      repeat: no-repeat;\r\n      size: cover;\r\n  }\r\n  ```\r\n\r\n  相当于\r\n\r\n  ```scss\r\n  background-color: #ccc;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  ```\r\n\r\n  还可以这么写：\r\n\r\n  ```scss\r\n   border: 1px solid #ccc {\r\n    	left: 0px;\r\n    	right: 0px;\r\n    }\r\n  ```\r\n\r\n  \r\n', NULL, NULL, NULL, '2019-04-29 15:21:03', '2019-04-29 15:21:03'),
	(9, 1004, 'vata', 'html5 新特性', NULL, '### - HTML5新特性\r\n\r\n---\r\n\r\n- **mathML**\r\n\r\n  - 是一种数学标记语言，是一种基于xml的标准，用来书写互联网上书写数学公式和符号的标志语言：\r\n\r\n    ![效果图](D:\\Myfile\\MyBlog\\mathML.png)\r\n\r\n- **拖放**\r\n\r\n  ![](D:\\Myfile\\MyBlog\\tuofang.gif)\r\n\r\n- **获取用户的定位**\r\n\r\n- **播放视频(video)**\r\n\r\n- **播放音频(audio)**\r\n\r\n- **新增了input输入类型**\r\n\r\n  - color\r\n\r\n  ![](D:\\Myfile\\MyBlog\\input输入类型.png)\r\n\r\n  - date、datetime、datetime-local、email、month、number、range、search、tel、time、url、week\r\n\r\n- **新增了表单元素**（觉得后面两个无卵用）\r\n\r\n  - datalist(*可选列表和输入提示*)、keygen(*元素的作用是提供一种验证用户的可靠方法*)、output(*用于不同类型的输出，可在表单上写oninput计算公式，实时更新计算结果*)\r\n\r\n- **新增表单（form、input）属性**\r\n\r\n  ![](D:\\Myfile\\MyBlog\\新增form-input属性.png)\r\n\r\n  - step（没截到图）\r\n\r\n- **HTML5 web 储存**\r\n\r\n  - 与cookie对比：\r\n    - cookie大小上线为4kb，web 可以存4~5M\r\n    - cookie每次http请求都携带，不安全。\r\n    - web性能比cookie高\r\n\r\n- **web SQL**\r\n\r\n- **web应用程序缓存**\r\n\r\n  - web应用可以进行缓存，在没有网络时也可以访问，带来的三个优势：\r\n    - 离线浏览 - 用户可在应用离线时使用它们\r\n    - 速度 - 已缓存资源加载得更快\r\n    - 减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。\r\n\r\n- **web Workers**\r\n\r\n  - web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。\r\n\r\n- ', NULL, NULL, NULL, '2019-04-29 15:22:12', '2019-04-29 15:22:12'),
	(10, 1008, 'vata', '关于自加和自减', NULL, '自加和自减以前没怎么用做返回值，今天在学习ES6的Generator的时候突然意识到a++和++a的区别：\r\n\r\n```\r\nfunction* abc（）{\r\n	let a = 1;\r\n	yield a++;   \r\n}\r\n\r\nlet g = abc();\r\n \r\nconsole.log(g.next());\r\n```\r\n以上打印结果为：**1**；\r\n\r\n但是如果换成 ***yield ++a*** 的话，打印的结果是：**2**；\r\n\r\n\r\n***\r\n**总结**：++a和a++都是自加，其他地方都一样，但是当要把他们当作返回值来使用的话，略微有些许小的区别。\r\n\r\n|形式 ( a=1 )| 结果 | 返回值 |\r\n|--|--|--|\r\n| a++ | 2 | 1 |\r\n| ++a | 2 | 2 |\r\n| a- - | 0 | 1 |\r\n| - -a | 0 | 0 |', NULL, NULL, NULL, '2019-04-29 15:23:14', '2019-04-29 15:23:14'),
	(11, 1016, 'vata', 'Url、Urn和Uri的区别', NULL, '\r\n\r\n**HTTP三次握手**\r\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20190218212055473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY2NjMzMw==,size_16,color_FFFFFF,t_70)\r\n​&emsp;主要是为了解决服务器的开启无用的链接。通过三次握手的行为，可以确定客户端能够正常的收到服务器传来的信息，如果三次握手没有成功，则服务器会关闭当前端口，而不会一直浪费端口资源\r\n\r\n​	（如果客户端一定时间内没有收到数据，则会从新发送请求）\r\n\r\n\r\n\r\n**URI、URL和URN**\r\n&emsp;**URI** 是统一资源标识符，包含**URL**和 **URN** ，是更高层的抽象概念\r\n&emsp;**URL** 是统一资源定位器，即资源的地址；\r\n&emsp;**URN**永久统一资源定位符，无论资源怎么改变位置，都可以通过**URN**找到，目前还没有具体的使用方法\r\n\r\n&emsp;**URI**和**URL**的区别\r\n&emsp;&emsp;**URI**是**URL**的父类，是更为抽象的概念，**URL** 则是具体的某个资源；\r\n\r\n&emsp;&emsp;- 举个例子：**URI** 比作实数集，则**URL**则表示具体的1、2、3...\r\n\r\n\r\n\r\n&emsp;**URL**的格式：protocol://user:pass@host:80/path?query=string#has\r\n&emsp;&emsp;- protocol表示网络协议部分\r\n&emsp;&emsp;- user:pass表示用户名和密码（不常用）\r\n&emsp;&emsp;- host:80表示域名和端口（端口默认为80）\r\n&emsp;&emsp;- query=string表示查找参数\r\n&emsp;&emsp;- hash 资源的某一片段\r\n\r\n&emsp;&emsp;URL的每个部分的位置不能变\r\n\r\n​			', NULL, NULL, NULL, '2019-04-29 15:24:44', '2019-04-29 15:24:44');
INSERT INTO `user` (`user_id`, `user`, `avatar`) VALUES
	(1001, '石秀朋', '/usr/img'),
	(1002, '朽然', '/usr/img'),
	(1003, 'vata', '/usr/img'),
	(1004, '齐帅', '/usr/img'),
	(1005, '张云鹤', '/usr/img'),
	(1006, '常田清', '/usr/img'),
	(1007, '杨金成', '/usr/img'),
	(1008, '付哲洋', '/usr/img'),
	(1009, '马化腾', '/usr/img'),
	(1010, '马云', '/usr/img'),
	(1011, '李彦宏', '/usr/img'),
	(1012, '刘强东', '/usr/img'),
	(1013, '雷军', '/usr/img'),
	(1014, '乔布斯', '/usr/img'),
	(1015, '比尔盖茨', '/usr/img'),
	(1016, '沃伦巴菲特', '/usr/img'),
	(1017, '李嘉诚', '/usr/img'),
	(1018, '王健林', '/usr/img'),
	(1019, '任正非', '/usr/img'),
	(1020, '马克扎克伯格', '/usr/img');
INSERT INTO `our_news` (`id`, `title`, `visits`, `markdown`, `synopsis`, `html`, `update_html`, `created_at`, `updated_all`) VALUES
	(1,'小案例', 8, '## JavaScript轮播图\r\n\r\n- 思路：设定一个div作为显示框，在框内添加一个超长的ul包裹图片，把每张图片的大小设置为div显示框的大小，设置css属性使第一张图片位于div显示框内，并且给div显示框设置overflow：hidden，把其他图片全部隐藏。js设置定时器，每隔3000毫秒ul向右移动一张图片的宽度。\r\n\r\n  \r\n\r\n  先写HTML代码 :\r\n\r\n  ```html\r\n  <!DOCTYPE html>\r\n  <html lang="en">\r\n  <head>\r\n      <meta charset="UTF-8">\r\n      <title>Document</title>\r\n      <link rel="stylesheet" href="./index.css">\r\n      <script src="./index.js"></script>\r\n  </head>\r\n  <body>\r\n      <div class="lbt">\r\n          <ul style="left: 0px">\r\n              <li><img class="img1" src="./pic/pic1.jpg" alt="pic"></li>\r\n              <li><img class="img2" src="./pic/pic2.jpg" alt="pic"></li>\r\n              <li><img class="img3" src="./pic/pic3.gif" alt="pic"></li>\r\n              <li><img class="img4" src="./pic/pic4.jpg" alt="pic"></li>\r\n              <li><img class="img5" src="./pic/pic5.jpg" alt="pic"></li>\r\n          </ul>\r\n      </div>\r\n  </body>\r\n  </html>\r\n  ```\r\n\r\n  \r\n\r\ncss样式：\r\n\r\n```css\r\n*{\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.lbt{\r\n    margin: 82px auto 0;\r\n    position: relative;\r\n    width: 800px;\r\n    height: 400px;\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.lbt ul{\r\n    position: absolute;\r\n    display: block;\r\n    top: 0;\r\n    width: 4000px;\r\n    height: 400px;\r\n}\r\n\r\n.lbt li{\r\n    float: left;\r\n    width: 800px;\r\n    height: 400px;\r\n}\r\n\r\n.lbt img{\r\n    width: 800px;\r\n    height: 400px;\r\n}\r\n```\r\n\r\n我们通过使用div显示框(.lbt) position：relative和ul的position：absolute进行定位，使轮播图的第一张图片刚好位于div显示框(.lbt)上。\r\n\r\n\r\n\r\n效果如下：\r\n\r\n\r\n\r\n![p][1]\r\n\r\n\r\n\r\n接下来写JavaScript代码：\r\n\r\n```javascript\r\nvar ul = document.getElementsByTagName(\'ul\');  //获取一个元素组\r\nvar i = 0;   //用于计数\r\nsetInterval(function (){\r\n    //添加定时器Interval\r\n    if(i == 4){\r\n        //当轮播到第六张图片时，回到第一张图片\r\n        ul[0].style.left = \'0px\';\r\n        i=0;\r\n    }else{\r\n        ul[0].style.left = (parseInt(ul[0].style.left) - 800) + \'px\'; //每过3000ms执行ul向左移动一张图片的距离    \r\n    }\r\n    i++;\r\n},3000);\r\n```\r\n\r\n\r\n\r\n***\r\n\r\n##### 易混淆点：\r\n\r\n1. 当使用position来定位时，left必须写为行间样式，因为行JavaScript的***ul[0].style*** 只能获取行间样式信息，引入css样式无法查看。\r\n\r\n2. 使用setInterval()定时器，第一次执行是等待3000ms后，所以为3000ms后left = -800px，所以执行播放第二张图，在 *i++* 执行以前，i = 0。即：\r\n\r\n   **图片**			**i**\r\n\r\n   pic1				0\r\n\r\n   pic2				0\r\n\r\n   pic3				1\r\n\r\n   pic4				2\r\n\r\n   pic5				3\r\n\r\n   \r\n\r\n   所以当i==4时，已经没有pic6可供展示，直接跳回最开始的pic1。\r\n\r\n   \r\n\r\n   -- 不会接gif图片，所以没有效果图了，抱歉！--\r\n\r\n   \r\n\r\n[1]: ./1.png\r\n\r\n', 'JavaScript轮播图\n\n思路：设定一个div作为显示框，在框内添加一个超长的ul包裹图片，把每张图片的大小设置为div显示框的大小，设置css属性使第一张图片位于div显示框内，并且给div显示框设置overflow：hidden，把其他图片全部隐藏。js设置定时器，每隔3000毫秒ul向右移动一张图片的宽度。\n\n  先写HTML代码 :\n  &lt;!DOCTYPE html&gt;\n  &lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n      &lt;meta charset=&quot;UTF-8&quot;&gt;\n      &lt;title&gt;Document&lt;/title&gt;\n      &lt;link rel=&quot;stylesheet&quot; href=&quot;./index.css&quot;&gt;\n      &lt;script src=&quot;./index.js&quot;&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;div class=&quot;lbt&quot;&gt;\n          &lt;ul style=&quot;left: 0px&quot;&gt;\n              &lt;li&gt;&lt;img class=&quot;img1&quot; src=&quot;./pic/pic1.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img2&quot; src=&quot;./pic/pic2.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img3&quot; src=&quot;./pic/pic3.gif&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img4&quot; src=&quot;./pic/pic4.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img5&quot; src=&quot;./pic/pic5.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n      &lt;/div&gt;\n  &lt;/body&gt;\n  &lt;/html&gt;\ncss样式：\n*{\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n}\n\n.lbt{\n    margin: 82px auto 0;\n    position: relative;\n    width: 800px;\n    height: 400px;\n    overflow: hidden;\n}\n\n\n.lbt ul{\n    position: absolute;\n    display: block;\n    top: 0;\n    width: 4000px;\n    height: 400px;\n}\n\n.lbt li{\n    float: left;\n    width: 800px;\n    height: 400px;\n}\n\n.lbt img{\n    width: 800px;\n    height: 400px;\n}\n我们通过使用div显示框(.lbt) position：relative和ul的position：absolute进行定位，使轮播图的第一张图片刚好位于div显示框(.lbt)上。\n效果如下：\n\n接下来写JavaScript代码：\nvar ul = document.getElementsByTagName(&#39;ul&#39;);  //获取一个元素组\nvar i = 0;   //用于计数\nsetInterval(function (){\n    //添加定时器Interval\n    if(i == 4){\n        //当轮播到第六张图片时，回到第一张图片\n        ul[0].style.left = &#39;0px&#39;;\n        i=0;\n    }else{\n        ul[0].style.left = (parseInt(ul[0].style.left) - 800) + &#39;px&#39;; //每过3000ms执行ul向左移动一张图片的距离    \n    }\n    i++;\n},3000);\n\n易混淆点：\n\n当使用position来定位时，left必须写为行间样式，因为行JavaScript的ul[0].style 只能获取行间样式信息，引入css样式无法查看。\n\n使用setInterval()定时器，第一次执行是等待3000ms后，所以为3000ms后left = -800px，所以执行播放第二张图，在 i++ 执行以前，i = 0。即：\n图片            i\npic1                0\npic2                0\npic3                1\npic4                2\npic5                3\n\n\n   所以当i==4时，已经没有pic6可供展示，直接跳回最开始的pic1。\n   -- 不会接gif图片，所以没有效果图了，抱歉！--\n', '<h2 id="javascript轮播图">JavaScript轮播图</h2>\n<ul>\n<li>思路：设定一个div作为显示框，在框内添加一个超长的ul包裹图片，把每张图片的大小设置为div显示框的大小，设置css属性使第一张图片位于div显示框内，并且给div显示框设置overflow：hidden，把其他图片全部隐藏。js设置定时器，每隔3000毫秒ul向右移动一张图片的宽度。</li>\n</ul>\n<p>  先写HTML代码 :</p>\n<pre><code class="language-html">  &lt;!DOCTYPE html&gt;\n  &lt;html lang=&quot;en&quot;&gt;\n  &lt;head&gt;\n      &lt;meta charset=&quot;UTF-8&quot;&gt;\n      &lt;title&gt;Document&lt;/title&gt;\n      &lt;link rel=&quot;stylesheet&quot; href=&quot;./index.css&quot;&gt;\n      &lt;script src=&quot;./index.js&quot;&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;div class=&quot;lbt&quot;&gt;\n          &lt;ul style=&quot;left: 0px&quot;&gt;\n              &lt;li&gt;&lt;img class=&quot;img1&quot; src=&quot;./pic/pic1.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img2&quot; src=&quot;./pic/pic2.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img3&quot; src=&quot;./pic/pic3.gif&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img4&quot; src=&quot;./pic/pic4.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n              &lt;li&gt;&lt;img class=&quot;img5&quot; src=&quot;./pic/pic5.jpg&quot; alt=&quot;pic&quot;&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n      &lt;/div&gt;\n  &lt;/body&gt;\n  &lt;/html&gt;</code></pre>\n<p>css样式：</p>\n<pre><code class="language-css">*{\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n}\n\n.lbt{\n    margin: 82px auto 0;\n    position: relative;\n    width: 800px;\n    height: 400px;\n    overflow: hidden;\n}\n\n\n.lbt ul{\n    position: absolute;\n    display: block;\n    top: 0;\n    width: 4000px;\n    height: 400px;\n}\n\n.lbt li{\n    float: left;\n    width: 800px;\n    height: 400px;\n}\n\n.lbt img{\n    width: 800px;\n    height: 400px;\n}</code></pre>\n<p>我们通过使用div显示框(.lbt) position：relative和ul的position：absolute进行定位，使轮播图的第一张图片刚好位于div显示框(.lbt)上。</p>\n<p>效果如下：</p>\n<p><img src="./1.png" alt="p"></p>\n<p>接下来写JavaScript代码：</p>\n<pre><code class="language-javascript">var ul = document.getElementsByTagName(&#39;ul&#39;);  //获取一个元素组\nvar i = 0;   //用于计数\nsetInterval(function (){\n    //添加定时器Interval\n    if(i == 4){\n        //当轮播到第六张图片时，回到第一张图片\n        ul[0].style.left = &#39;0px&#39;;\n        i=0;\n    }else{\n        ul[0].style.left = (parseInt(ul[0].style.left) - 800) + &#39;px&#39;; //每过3000ms执行ul向左移动一张图片的距离    \n    }\n    i++;\n},3000);</code></pre>\n<hr>\n<h5 id="易混淆点：">易混淆点：</h5>\n<ol>\n<li><p>当使用position来定位时，left必须写为行间样式，因为行JavaScript的<strong><em>ul[0].style</em></strong> 只能获取行间样式信息，引入css样式无法查看。</p>\n</li>\n<li><p>使用setInterval()定时器，第一次执行是等待3000ms后，所以为3000ms后left = -800px，所以执行播放第二张图，在 <em>i++</em> 执行以前，i = 0。即：</p>\n<p><strong>图片</strong>            <strong>i</strong></p>\n<p>pic1                0</p>\n<p>pic2                0</p>\n<p>pic3                1</p>\n<p>pic4                2</p>\n<p>pic5                3</p>\n</li>\n</ol>\n<p>   所以当i==4时，已经没有pic6可供展示，直接跳回最开始的pic1。</p>\n<p>   -- 不会接gif图片，所以没有效果图了，抱歉！--</p>\n', '2019-08-22 16:09:53', '2019-04-26 20:22:23', '2019-08-22 16:11:01'),
	(2,'css之position定位', 3, '\r\n\r\n> **position: static**\r\n\r\n&nbsp; &nbsp;  默认值，标签会占据网页的一定的空间，且不会受到top，bottom，left，right等元素的影响。\r\n\r\n > **position: fixed**\r\n \r\n&nbsp; &nbsp; 标签不会占用所在网页的空间，且该标签不会随着网页滚动条的滚动而改变位置。即该标签悬浮于网页上方，不会受到网页的影响。\r\n	\r\n> **position: relative**\r\n\r\n&nbsp; &nbsp; 标签会占据网页一定的空间。标签的top，bottom，left，right等值可以定义为负值，此情况下标签会超出网页移动，超出网页的内容将被遮盖。\r\n	\r\n> **position: absolute**\r\n\r\n&nbsp; &nbsp; 标签不会占据网页的空间。此定位方式是根据父标签（包围此标签的上一级标签）或html（没有父标签的情况）定位的，标签会与网页内容重合(必须设定top、bottom、 left、right其中一个元素，否则还是会遵循文本流)。\r\n	\r\n> **position: sticky**\r\n\r\n&nbsp; &nbsp; 标签会占据网页一定的空间。 当滚动网页下移时，与position：fixed一样。top，bottom，left，right可以定义为负值，滚动后可如position：relative一样显示。如top=-10px时，网页下滑，该标签将会有10px的内容被上边框覆盖。', '\nposition: static\n\n&nbsp; &nbsp;  默认值，标签会占据网页的一定的空间，且不会受到top，bottom，left，right等元素的影响。\n\nposition: fixed\n\n&nbsp; &nbsp; 标签不会占用所在网页的空间，且该标签不会随着网页滚动条的滚动而改变位置。即该标签悬浮于网页上方，不会受到网页的影响。\n\nposition: relative\n\n&nbsp; &nbsp; 标签会占据网页一定的空间。标签的top，bottom，left，right等值可以定义为负值，此情况下标签会超出网页移动，超出网页的内容将被遮盖。\n\nposition: absolute\n\n&nbsp; &nbsp; 标签不会占据网页的空间。此定位方式是根据父标签（包围此标签的上一级标签）或html（没有父标签的情况）定位的，标签会与网页内容重合(必须设定top、bottom、 left、right其中一个元素，否则还是会遵循文本流)。\n\nposition: sticky\n\n&nbsp; &nbsp; 标签会占据网页一定的空间。 当滚动网页下移时，与position：fixed一样。top，bottom，left，right可以定义为负值，滚动后可如position：relative一样显示。如top=-10px时，网页下滑，该标签将会有10px的内容被上边框覆盖。\n', '<blockquote>\n<p><strong>position: static</strong></p>\n</blockquote>\n<p>&nbsp; &nbsp;  默认值，标签会占据网页的一定的空间，且不会受到top，bottom，left，right等元素的影响。</p>\n<blockquote>\n<p><strong>position: fixed</strong></p>\n</blockquote>\n<p>&nbsp; &nbsp; 标签不会占用所在网页的空间，且该标签不会随着网页滚动条的滚动而改变位置。即该标签悬浮于网页上方，不会受到网页的影响。</p>\n<blockquote>\n<p><strong>position: relative</strong></p>\n</blockquote>\n<p>&nbsp; &nbsp; 标签会占据网页一定的空间。标签的top，bottom，left，right等值可以定义为负值，此情况下标签会超出网页移动，超出网页的内容将被遮盖。</p>\n<blockquote>\n<p><strong>position: absolute</strong></p>\n</blockquote>\n<p>&nbsp; &nbsp; 标签不会占据网页的空间。此定位方式是根据父标签（包围此标签的上一级标签）或html（没有父标签的情况）定位的，标签会与网页内容重合(必须设定top、bottom、 left、right其中一个元素，否则还是会遵循文本流)。</p>\n<blockquote>\n<p><strong>position: sticky</strong></p>\n</blockquote>\n<p>&nbsp; &nbsp; 标签会占据网页一定的空间。 当滚动网页下移时，与position：fixed一样。top，bottom，left，right可以定义为负值，滚动后可如position：relative一样显示。如top=-10px时，网页下滑，该标签将会有10px的内容被上边框覆盖。</p>\n', '2019-08-22 16:09:44', '2019-04-26 20:23:16', '2019-08-22 16:09:44'),
	(3,'sharpfactory SQL规则文档', 2, '# SharpFactory官网数据结构\r\n\r\n## 界面数据\r\n\r\n* 展示图片 -- VARCHAR(URL)\r\n* 文字信息 -- VARCHAR\r\n\r\n## blog数据\r\n\r\n* synopsis -- TEXT\r\n* markdown -- TEXT\r\n* html - TEXT\r\n* title -- VARCHAR\r\n* update_at -- CURRENT_TIMESTAMP\r\n* update_all -- CURRENT_TIMESTAMP\r\n* update_html -- DATETIME\r\n\r\n## 用户数据\r\n\r\n* usr -- VARCHAR\r\n* password -- BIGVARCHAR\r\n* salt -- VARCHAR\r\n* id -- INT\r\n* email -- VARCHAR\r\n* urlNavigationData -- 此为一个数据集合，具体数据类型待定\r\n\r\n## 论坛数据\r\n\r\n* id -- INT\r\n* name -- VARCHAR\r\n* ip -- BIGINT(转换)\r\n* content -- TEXT\r\n* time -- CURRENT_TIMESTAMP\r\n\r\n## 承接项目数据\r\n\r\n* content -- TEXT\r\n* id -- INT\r\n* time -- CURRENT_TIMESTAMP\r\n* phone -- BIGINT\r\n* email -- VARCHAR\r\n* readmeText -- VARCHAR(URL)\r\n\r\n## 网址导航数据\r\n\r\n* category -- VARCHAR\r\n* websiteUrl -- VARCHAR(URL)\r\n* wallpaper -- VARCHAR(URL)\r\n\r\n\r\n\r\n### 本文中尚未提及的数据类型均为待定，视实际情况而定', 'SharpFactory官网数据结构\n界面数据\n\n展示图片 -- VARCHAR(URL)\n文字信息 -- VARCHAR\n\nblog数据\n\nsynopsis -- TEXT\nmarkdown -- TEXT\nhtml - TEXT\ntitle -- VARCHAR\nupdate_at -- CURRENT_TIMESTAMP\nupdate_all -- CURRENT_TIMESTAMP\nupdate_html -- DATETIME\n\n用户数据\n\nusr -- VARCHAR\npassword -- BIGVARCHAR\nsalt -- VARCHAR\nid -- INT\nemail -- VARCHAR\nurlNavigationData -- 此为一个数据集合，具体数据类型待定\n\n论坛数据\n\nid -- INT\nname -- VARCHAR\nip -- BIGINT(转换)\ncontent -- TEXT\ntime -- CURRENT_TIMESTAMP\n\n承接项目数据\n\ncontent -- TEXT\nid -- INT\ntime -- CURRENT_TIMESTAMP\nphone -- BIGINT\nemail -- VARCHAR\nreadmeText -- VARCHAR(URL)\n\n网址导航数据\n\ncategory -- VARCHAR\nwebsiteUrl -- VARCHAR(URL)\nwallpaper -- VARCHAR(URL)\n\n本文中尚未提及的数据类型均为待定，视实际情况而定\n', '<h1 id="sharpfactory官网数据结构">SharpFactory官网数据结构</h1>\n<h2 id="界面数据">界面数据</h2>\n<ul>\n<li>展示图片 -- VARCHAR(URL)</li>\n<li>文字信息 -- VARCHAR</li>\n</ul>\n<h2 id="blog数据">blog数据</h2>\n<ul>\n<li>synopsis -- TEXT</li>\n<li>markdown -- TEXT</li>\n<li>html - TEXT</li>\n<li>title -- VARCHAR</li>\n<li>update_at -- CURRENT_TIMESTAMP</li>\n<li>update_all -- CURRENT_TIMESTAMP</li>\n<li>update_html -- DATETIME</li>\n</ul>\n<h2 id="用户数据">用户数据</h2>\n<ul>\n<li>usr -- VARCHAR</li>\n<li>password -- BIGVARCHAR</li>\n<li>salt -- VARCHAR</li>\n<li>id -- INT</li>\n<li>email -- VARCHAR</li>\n<li>urlNavigationData -- 此为一个数据集合，具体数据类型待定</li>\n</ul>\n<h2 id="论坛数据">论坛数据</h2>\n<ul>\n<li>id -- INT</li>\n<li>name -- VARCHAR</li>\n<li>ip -- BIGINT(转换)</li>\n<li>content -- TEXT</li>\n<li>time -- CURRENT_TIMESTAMP</li>\n</ul>\n<h2 id="承接项目数据">承接项目数据</h2>\n<ul>\n<li>content -- TEXT</li>\n<li>id -- INT</li>\n<li>time -- CURRENT_TIMESTAMP</li>\n<li>phone -- BIGINT</li>\n<li>email -- VARCHAR</li>\n<li>readmeText -- VARCHAR(URL)</li>\n</ul>\n<h2 id="网址导航数据">网址导航数据</h2>\n<ul>\n<li>category -- VARCHAR</li>\n<li>websiteUrl -- VARCHAR(URL)</li>\n<li>wallpaper -- VARCHAR(URL)</li>\n</ul>\n<h3 id="本文中尚未提及的数据类型均为待定，视实际情况而定">本文中尚未提及的数据类型均为待定，视实际情况而定</h3>\n', '2019-08-13 15:26:28', '2019-04-26 20:25:20', '2019-08-22 16:08:33'),
	(4,'JavaScript 关于全局和局部变量', 3, '<font color=#ff0000 face="黑体">js会提前对声明的部分做完整的分析，之后再按顺序执行代码。</font>\r\n\r\n* 例一\r\n```\r\nvar a= 100;\r\nfunction asd(){\r\n    alert(a);\r\n}\r\n\r\nasd();\r\n```\r\n结果：\r\n> 100\r\n\r\n* 例二\r\n\r\n```\r\nvar a= 100;\r\nfunction asd(){\r\n    alert(a);\r\n    var a=123;\r\n    alert(a);\r\n}\r\n\r\nasd();\r\n```\r\n结果：\r\n> undefined  123\r\n \r\n **例题说明**：在js对声明部分进行分析时，对`var a= 123；`这行代码的声明部分进行分析，判定asd()函数中有局部变量被声明，所以没有显示第一行声明的全局变量的值。\r\n \r\n```\r\nvar a= 123；\r\n```\r\n等价于：\r\n```\r\nvar a；//这句代码被提前分析\r\na= 123；这句代码没有执行\r\n```\r\n所以输出的只会等于undefined，而不是123；第二次输出才会等于123；\r\n·\r\n·\r\n·\r\n*注意：在函数中声明变量，使用var关键字声明的是局部变量，没有用的是全局变量。*', 'js会提前对声明的部分做完整的分析，之后再按顺序执行代码。\n\n例一var a= 100;\nfunction asd(){\n  alert(a);\n}\n\n\nasd();\n结果：\n&gt; 100\n\n* 例二\nvar a= 100;\nfunction asd(){\n    alert(a);\n    var a=123;\n    alert(a);\n}\nasd();\n结果：\n&gt; undefined  123\n\n **例题说明**：在js对声明部分进行分析时，对`var a= 123；`这行代码的声明部分进行分析，判定asd()函数中有局部变量被声明，所以没有显示第一行声明的全局变量的值。\nvar a= 123；\n等价于：var a；//这句代码被提前分析\na= 123；这句代码没有执行\n```\n所以输出的只会等于undefined，而不是123；第二次输出才会等于123；\n·\n·\n·\n注意：在函数中声明变量，使用var关键字声明的是局部变量，没有用的是全局变量。\n', '<p><font color=#ff0000 face="黑体">js会提前对声明的部分做完整的分析，之后再按顺序执行代码。</font></p>\n<ul>\n<li>例一<pre><code>var a= 100;\nfunction asd(){\n  alert(a);\n}\n</code></pre></li>\n</ul>\n<p>asd();</p>\n<pre><code>结果：\n&gt; 100\n\n* 例二\n</code></pre><p>var a= 100;\nfunction asd(){\n    alert(a);\n    var a=123;\n    alert(a);\n}</p>\n<p>asd();</p>\n<pre><code>结果：\n&gt; undefined  123\n\n **例题说明**：在js对声明部分进行分析时，对`var a= 123；`这行代码的声明部分进行分析，判定asd()函数中有局部变量被声明，所以没有显示第一行声明的全局变量的值。\n</code></pre><p>var a= 123；</p>\n<pre><code>等价于：</code></pre><p>var a；//这句代码被提前分析\na= 123；这句代码没有执行</p>\n<p>```\n所以输出的只会等于undefined，而不是123；第二次输出才会等于123；\n·\n·\n·\n<em>注意：在函数中声明变量，使用var关键字声明的是局部变量，没有用的是全局变量。</em></p>\n', '2019-08-22 16:08:56', '2019-04-27 11:26:09', '2019-08-22 16:08:56'),
	(5,'局域网和ip', 1, '# 局域网和IP\r\n\r\n### IPv4\r\n\r\nIPv4是由32个二进制数组成（即四段，每段八个）\r\n\r\n| 主类网          | 网络位                       | 主机位                       |\r\n| :-------------- | :--------------------------- | :--------------------------- |\r\n| A类（0~127）    | 前八位（第一段）             | 后二十四位（第二、三、四段） |\r\n| B类（128~191）  | 前十六位（第一、二段）       | 后十六位（第三、四段）       |\r\n| C类（192~223）  | 前二十四位（第一、二、三段） | 后八位（第四段）             |\r\n| D类（组播地址） | ---                          | ---                          |\r\n| D类（保留）     | ---                          | ---                          |\r\n\r\n\r\n\r\n特殊的IP地址：\r\n\r\n1. 网络位不变，主机位全为0：    表示网络地址（网段范围）             192.168.1.0\r\n2. 网络位不变，主机位全为1：    表示子网广播地址（所有主机）     192.168.1.255\r\n3. 网络位和主机位全为0：    表示默认路由/缺省路由（所有网络）    0.0.0.0\r\n4. 网络位和主机位全为1：    表示全网广播地址                                    255.255.255.255\r\n5. 网络位为127，主机地址任意：    表示换回地址                               127.0.0.1\r\n\r\n\r\n\r\n私有IP地址：（可以自己通过交换机和路由器搭局域网）\r\n\r\nA：10.0.0.0 ~ 10.255.255.255\r\n\r\nB：172.16.0.0 ~ 172.31.255.255\r\n\r\nC：192.168.0.0 ~ 192.168.255.255', '局域网和IP\nIPv4\nIPv4是由32个二进制数组成（即四段，每段八个）\n\n\n\n主类网\n网络位\n主机位\n\n\n\nA类（0~127）\n前八位（第一段）\n后二十四位（第二、三、四段）\n\n\nB类（128~191）\n前十六位（第一、二段）\n后十六位（第三、四段）\n\n\nC类（192~223）\n前二十四位（第一、二、三段）\n后八位（第四段）\n\n\nD类（组播地址）\n---\n---\n\n\nD类（保留）\n---\n---\n\n\n特殊的IP地址：\n\n网络位不变，主机位全为0：    表示网络地址（网段范围）             192.168.1.0\n网络位不变，主机位全为1：    表示子网广播地址（所有主机）     192.168.1.255\n网络位和主机位全为0：    表示默认路由/缺省路由（所有网络）    0.0.0.0\n网络位和主机位全为1：    表示全网广播地址                                    255.255.255.255\n网络位为127，主机地址任意：    表示换回地址                               127.0.0.1\n\n私有IP地址：（可以自己通过交换机和路由器搭局域网）\nA：10.0.0.0 ~ 10.255.255.255\nB：172.16.0.0 ~ 172.31.255.255\nC：192.168.0.0 ~ 192.168.255.255\n', '<h1 id="局域网和ip">局域网和IP</h1>\n<h3 id="ipv4">IPv4</h3>\n<p>IPv4是由32个二进制数组成（即四段，每段八个）</p>\n<table>\n<thead>\n<tr>\n<th align="left">主类网</th>\n<th align="left">网络位</th>\n<th align="left">主机位</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">A类（0~127）</td>\n<td align="left">前八位（第一段）</td>\n<td align="left">后二十四位（第二、三、四段）</td>\n</tr>\n<tr>\n<td align="left">B类（128~191）</td>\n<td align="left">前十六位（第一、二段）</td>\n<td align="left">后十六位（第三、四段）</td>\n</tr>\n<tr>\n<td align="left">C类（192~223）</td>\n<td align="left">前二十四位（第一、二、三段）</td>\n<td align="left">后八位（第四段）</td>\n</tr>\n<tr>\n<td align="left">D类（组播地址）</td>\n<td align="left">---</td>\n<td align="left">---</td>\n</tr>\n<tr>\n<td align="left">D类（保留）</td>\n<td align="left">---</td>\n<td align="left">---</td>\n</tr>\n</tbody></table>\n<p>特殊的IP地址：</p>\n<ol>\n<li>网络位不变，主机位全为0：    表示网络地址（网段范围）             192.168.1.0</li>\n<li>网络位不变，主机位全为1：    表示子网广播地址（所有主机）     192.168.1.255</li>\n<li>网络位和主机位全为0：    表示默认路由/缺省路由（所有网络）    0.0.0.0</li>\n<li>网络位和主机位全为1：    表示全网广播地址                                    255.255.255.255</li>\n<li>网络位为127，主机地址任意：    表示换回地址                               127.0.0.1</li>\n</ol>\n<p>私有IP地址：（可以自己通过交换机和路由器搭局域网）</p>\n<p>A：10.0.0.0 ~ 10.255.255.255</p>\n<p>B：172.16.0.0 ~ 172.31.255.255</p>\n<p>C：192.168.0.0 ~ 192.168.255.255</p>\n', '2019-08-22 16:27:36', '2019-04-28 22:17:45', '2019-08-22 16:27:36'),
	(6,'mysql存储引擎', 1, '首先线要了解：\r\n\r\n- 事务：事务是指单个逻辑工作单元的一系列操作，要么完全执行，要么不执行\r\n- 外键：关联两张数据表的一列数据\r\n- 文件后缀：\r\n  - .frm  存储表结构和信息（该表有多少列，每列的名字）\r\n  - .MYD  存储数据\r\n  - .MYI  存储索引\r\n\r\n\r\n\r\n存储引擎：\r\n\r\n- MyISAM：不支持事务，不支持外键，但是访问速度特别快\r\n- INNODB：提供了提交，回滚和崩溃恢复能力的事务安全，相对效率低，占内存大\r\n- MEMORY：使用内存存储数据，访问非常快，但是服务器如果关闭，数据就会丢失（只有一张空的表文件  xx.frm ）。', '首先线要了解：\n\n事务：事务是指单个逻辑工作单元的一系列操作，要么完全执行，要么不执行\n外键：关联两张数据表的一列数据\n文件后缀：\n.frm  存储表结构和信息（该表有多少列，每列的名字）\n.MYD  存储数据\n.MYI  存储索引\n\n\n\n存储引擎：\n\nMyISAM：不支持事务，不支持外键，但是访问速度特别快\nINNODB：提供了提交，回滚和崩溃恢复能力的事务安全，相对效率低，占内存大\nMEMORY：使用内存存储数据，访问非常快，但是服务器如果关闭，数据就会丢失（只有一张空的表文件  xx.frm ）。\n\n', '<p>首先线要了解：</p>\n<ul>\n<li>事务：事务是指单个逻辑工作单元的一系列操作，要么完全执行，要么不执行</li>\n<li>外键：关联两张数据表的一列数据</li>\n<li>文件后缀：<ul>\n<li>.frm  存储表结构和信息（该表有多少列，每列的名字）</li>\n<li>.MYD  存储数据</li>\n<li>.MYI  存储索引</li>\n</ul>\n</li>\n</ul>\n<p>存储引擎：</p>\n<ul>\n<li>MyISAM：不支持事务，不支持外键，但是访问速度特别快</li>\n<li>INNODB：提供了提交，回滚和崩溃恢复能力的事务安全，相对效率低，占内存大</li>\n<li>MEMORY：使用内存存储数据，访问非常快，但是服务器如果关闭，数据就会丢失（只有一张空的表文件  xx.frm ）。</li>\n</ul>\n', '2019-08-22 16:27:31', '2019-04-28 22:18:27', '2019-08-22 16:27:31'),
	(7,'Vue Component', 2, '## vue学习笔记 ---- component组件\r\n\r\n- 创建全局组件\r\n\r\n  ```html\r\n  <div id="myID">\r\n  	<mydiv></mydiv>\r\n  </div>\r\n  \r\n  	<script>\r\n  		// 注册\r\n  		Vue.component(\'mydiv\', {\r\n   			template: \'<div>自定义组件!</div>\'\r\n  		});\r\n  		// 创建根实例\r\n  		new Vue({\r\n    			el: \'#myID\'\r\n  		});\r\n  </script>\r\n  ```\r\n\r\n- 创建局部组件\r\n\r\n  ```html\r\n  <div id="myID">\r\n  	<runoob></runoob>\r\n  </div>\r\n  \r\n  <script>\r\n  \r\n  // 创建根实例\r\n  new Vue({\r\n    el: \'#myID\',\r\n    components: {\r\n      // <mydiv> 将只在#myID元素内可用\r\n      \'runoob\': {\r\n    		template: \'<div>自定义组件!</div>\'\r\n  	}\r\n    }\r\n  })\r\n  </script>\r\n  ```\r\n\r\n  ', 'vue学习笔记 ---- component组件\n\n创建全局组件\n&lt;div id=&quot;myID&quot;&gt;\n    &lt;mydiv&gt;&lt;/mydiv&gt;\n&lt;/div&gt;\n\n    &lt;script&gt;\n        // 注册\n        Vue.component(&#39;mydiv&#39;, {\n             template: &#39;&lt;div&gt;自定义组件!&lt;/div&gt;&#39;\n        });\n        // 创建根实例\n        new Vue({\n              el: &#39;#myID&#39;\n        });\n&lt;/script&gt;\n\n创建局部组件\n&lt;div id=&quot;myID&quot;&gt;\n    &lt;runoob&gt;&lt;/runoob&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n\n// 创建根实例\nnew Vue({\n  el: &#39;#myID&#39;,\n  components: {\n    // &lt;mydiv&gt; 将只在#myID元素内可用\n    &#39;runoob&#39;: {\n          template: &#39;&lt;div&gt;自定义组件!&lt;/div&gt;&#39;\n    }\n  }\n})\n&lt;/script&gt;\n\n\n', '<h2 id="vue学习笔记------component组件">vue学习笔记 ---- component组件</h2>\n<ul>\n<li><p>创建全局组件</p>\n<pre><code class="language-html">&lt;div id=&quot;myID&quot;&gt;\n    &lt;mydiv&gt;&lt;/mydiv&gt;\n&lt;/div&gt;\n\n    &lt;script&gt;\n        // 注册\n        Vue.component(&#39;mydiv&#39;, {\n             template: &#39;&lt;div&gt;自定义组件!&lt;/div&gt;&#39;\n        });\n        // 创建根实例\n        new Vue({\n              el: &#39;#myID&#39;\n        });\n&lt;/script&gt;</code></pre>\n</li>\n<li><p>创建局部组件</p>\n<pre><code class="language-html">&lt;div id=&quot;myID&quot;&gt;\n    &lt;runoob&gt;&lt;/runoob&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n\n// 创建根实例\nnew Vue({\n  el: &#39;#myID&#39;,\n  components: {\n    // &lt;mydiv&gt; 将只在#myID元素内可用\n    &#39;runoob&#39;: {\n          template: &#39;&lt;div&gt;自定义组件!&lt;/div&gt;&#39;\n    }\n  }\n})\n&lt;/script&gt;</code></pre>\n</li>\n</ul>\n', '2019-08-13 16:06:23', '2019-04-29 15:20:10', '2019-08-22 16:08:47'),
	(8,'sass学习笔记', 2, '### WEB前端开发 ------ sass学习笔记\r\n\r\n***\r\n\r\n##### - 预处理器的功能\r\n\r\n- 可以创建变量\r\n\r\n\r\n\r\n**一、变量应用：**\r\n\r\n- 命名规则：$name: value\r\n\r\n  ```scss\r\n  $border-color: #000;  \r\n  ```\r\n\r\n- 变量引用\r\n\r\n  ```scss\r\n  $border-color: #000;\r\n  \r\n  div{\r\n      border: 1px solid $border-color;\r\n  }\r\n  ```\r\n\r\n- **注意事项**\r\n\r\n  - 在命名变量时，**_** (下划线) 和 **-** (中划线) 是一样的，没有区别，喜欢怎么用看个性\r\n\r\n  - 变量的值也可以有变量\r\n\r\n    ```scss\r\n    $background-color: #ccc;\r\n    \r\n    $border: 1px solid $background-color;\r\n    \r\n    div{\r\n        border: $border;\r\n    }\r\n    ```\r\n\r\n  - 变量可以局部创建也可以全局创建，但是局部变量只能在局部有效，全局变量则整篇内容都有效。\r\n\r\n    ```scss\r\n    #border-color: #ccc; /* 全局有效 */\r\n    \r\n    div{\r\n        $size: 2px; /* 只在div{}内有效 */\r\n        border: $size solid $border-color;\r\n    }\r\n    ```\r\n\r\n**二、嵌套css规则**\r\n\r\n- 父选择器（&）的使用\r\n\r\n  - 当我们要添加伪类:hover时，可以使用父选择器（&）\r\n\r\n    ```scss\r\n    div a{\r\n        color: #000;\r\n        &:hover{\r\n            color: #f00;\r\n        }\r\n    }\r\n    ```\r\n\r\n    父选择器指代div下的a标签，即\r\n\r\n    ```scss\r\n    div a {\r\n        color: #000;\r\n    }\r\n    \r\n    article a:hover { \r\n        color: #f00;\r\n    }\r\n    \r\n    /*\r\n    没有添加父类选择器（&）：意义为div下a标签下的所有子标签都会添加上:hover.（a和:hover之间的空格表示子选择器，稍后说明）\r\n    \r\n    div a {\r\n        color: #000;\r\n    }\r\n    \r\n    article a :hover { 		\r\n        color: #f00;   \r\n    }\r\n    */\r\n    ```\r\n\r\n- 群组选择器\r\n\r\n  - 多个标签同时对应一个css，可以通过群组选择器（,）连接，即逗号连接，表示多种情况\r\n\r\n    ```scss\r\n    .button1, .button2, .button3{\r\n        width: 45px;\r\n        height: 24px;\r\n    }\r\n    ```\r\n\r\n- 子组合选择器，同层组合选择器\r\n\r\n  - 子组合选择器\r\n\r\n    - 箭头（>）\r\n\r\n      ```scss\r\n      div>a{\r\n          /* 表示div下的 第一层标签 中所有的a标签 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n      \r\n\r\n    - 空格\r\n\r\n      ```scss\r\n      div a{\r\n          /* 表示div下的 所有 的a标签 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n  - 同层组合选择器\r\n\r\n    - 加号（+）\r\n\r\n      ```scss\r\n      div+a{\r\n          /* 表示div后相邻着的a标签 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n      \r\n\r\n    - ~\r\n\r\n      ```scss\r\n      div~a{\r\n          /* 表示div后的所有的a标签，不管相不相邻 */\r\n          color: #000;\r\n      }\r\n      ```\r\n\r\n- 嵌套属性\r\n\r\n  ```scss\r\n  background: {\r\n      repeat: no-repeat;\r\n      size: cover;\r\n  }\r\n  ```\r\n\r\n  相当于\r\n\r\n  ```scss\r\n  background-color: #ccc;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  ```\r\n\r\n  还可以这么写：\r\n\r\n  ```scss\r\n   border: 1px solid #ccc {\r\n    	left: 0px;\r\n    	right: 0px;\r\n    }\r\n  ```\r\n\r\n  \r\n', 'WEB前端开发 ------ sass学习笔记\n\n- 预处理器的功能\n\n可以创建变量\n\n一、变量应用：\n\n命名规则：$name: value\n$border-color: #000;  \n\n变量引用\n$border-color: #000;\n\ndiv{\n    border: 1px solid $border-color;\n}\n\n注意事项\n\n在命名变量时，_ (下划线) 和 - (中划线) 是一样的，没有区别，喜欢怎么用看个性\n\n变量的值也可以有变量\n$background-color: #ccc;\n\n$border: 1px solid $background-color;\n\ndiv{\n    border: $border;\n}\n\n变量可以局部创建也可以全局创建，但是局部变量只能在局部有效，全局变量则整篇内容都有效。\n#border-color: #ccc; /* 全局有效 */\n\ndiv{\n    $size: 2px; /* 只在div{}内有效 */\n    border: $size solid $border-color;\n}\n\n\n\n\n二、嵌套css规则\n\n父选择器（&amp;）的使用\n\n当我们要添加伪类:hover时，可以使用父选择器（&amp;）\ndiv a{\n    color: #000;\n    &amp;:hover{\n        color: #f00;\n    }\n}\n父选择器指代div下的a标签，即\ndiv a {\n    color: #000;\n}\n\narticle a:hover { \n    color: #f00;\n}\n\n/*\n没有添加父类选择器（&amp;）：意义为div下a标签下的所有子标签都会添加上:hover.（a和:hover之间的空格表示子选择器，稍后说明）\n\ndiv a {\n    color: #000;\n}\n\narticle a :hover {         \n    color: #f00;   \n}\n*/\n\n\n\n群组选择器\n\n多个标签同时对应一个css，可以通过群组选择器（,）连接，即逗号连接，表示多种情况\n.button1, .button2, .button3{\n    width: 45px;\n    height: 24px;\n}\n\n\n\n子组合选择器，同层组合选择器\n\n子组合选择器\n\n箭头（&gt;）\ndiv&gt;a{\n    /* 表示div下的 第一层标签 中所有的a标签 */\n    color: #000;\n}\n\n\n\n\n\n\n- 空格\n\n  ```scss\n  div a{\n      /* 表示div下的 所有 的a标签 */\n      color: #000;\n  }\n  ```\n同层组合选择器\n\n加号（+）\ndiv+a{\n    /* 表示div后相邻着的a标签 */\n    color: #000;\n}\n\n\n\n\n- ~\n\n  ```scss\n  div~a{\n      /* 表示div后的所有的a标签，不管相不相邻 */\n      color: #000;\n  }\n  ```\n嵌套属性\nbackground: {\n    repeat: no-repeat;\n    size: cover;\n}\n相当于\nbackground-color: #ccc;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n还可以这么写：\n border: 1px solid #ccc {\n      left: 0px;\n      right: 0px;\n  }\n\n\n', '<h3 id="web前端开发--------sass学习笔记">WEB前端开发 ------ sass学习笔记</h3>\n<hr>\n<h5 id="--预处理器的功能">- 预处理器的功能</h5>\n<ul>\n<li>可以创建变量</li>\n</ul>\n<p><strong>一、变量应用：</strong></p>\n<ul>\n<li><p>命名规则：$name: value</p>\n<pre><code class="language-scss">$border-color: #000;  </code></pre>\n</li>\n<li><p>变量引用</p>\n<pre><code class="language-scss">$border-color: #000;\n\ndiv{\n    border: 1px solid $border-color;\n}</code></pre>\n</li>\n<li><p><strong>注意事项</strong></p>\n<ul>\n<li><p>在命名变量时，<strong>_</strong> (下划线) 和 <strong>-</strong> (中划线) 是一样的，没有区别，喜欢怎么用看个性</p>\n</li>\n<li><p>变量的值也可以有变量</p>\n<pre><code class="language-scss">$background-color: #ccc;\n\n$border: 1px solid $background-color;\n\ndiv{\n    border: $border;\n}</code></pre>\n</li>\n<li><p>变量可以局部创建也可以全局创建，但是局部变量只能在局部有效，全局变量则整篇内容都有效。</p>\n<pre><code class="language-scss">#border-color: #ccc; /* 全局有效 */\n\ndiv{\n    $size: 2px; /* 只在div{}内有效 */\n    border: $size solid $border-color;\n}</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>二、嵌套css规则</strong></p>\n<ul>\n<li><p>父选择器（&amp;）的使用</p>\n<ul>\n<li><p>当我们要添加伪类:hover时，可以使用父选择器（&amp;）</p>\n<pre><code class="language-scss">div a{\n    color: #000;\n    &amp;:hover{\n        color: #f00;\n    }\n}</code></pre>\n<p>父选择器指代div下的a标签，即</p>\n<pre><code class="language-scss">div a {\n    color: #000;\n}\n\narticle a:hover { \n    color: #f00;\n}\n\n/*\n没有添加父类选择器（&amp;）：意义为div下a标签下的所有子标签都会添加上:hover.（a和:hover之间的空格表示子选择器，稍后说明）\n\ndiv a {\n    color: #000;\n}\n\narticle a :hover {         \n    color: #f00;   \n}\n*/</code></pre>\n</li>\n</ul>\n</li>\n<li><p>群组选择器</p>\n<ul>\n<li><p>多个标签同时对应一个css，可以通过群组选择器（,）连接，即逗号连接，表示多种情况</p>\n<pre><code class="language-scss">.button1, .button2, .button3{\n    width: 45px;\n    height: 24px;\n}</code></pre>\n</li>\n</ul>\n</li>\n<li><p>子组合选择器，同层组合选择器</p>\n<ul>\n<li><p>子组合选择器</p>\n<ul>\n<li><p>箭头（&gt;）</p>\n<pre><code class="language-scss">div&gt;a{\n    /* 表示div下的 第一层标签 中所有的a标签 */\n    color: #000;\n}</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>- 空格\n\n  ```scss\n  div a{\n      /* 表示div下的 所有 的a标签 */\n      color: #000;\n  }\n  ```</code></pre><ul>\n<li><p>同层组合选择器</p>\n<ul>\n<li><p>加号（+）</p>\n<pre><code class="language-scss">div+a{\n    /* 表示div后相邻着的a标签 */\n    color: #000;\n}</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>- ~\n\n  ```scss\n  div~a{\n      /* 表示div后的所有的a标签，不管相不相邻 */\n      color: #000;\n  }\n  ```</code></pre><ul>\n<li><p>嵌套属性</p>\n<pre><code class="language-scss">background: {\n    repeat: no-repeat;\n    size: cover;\n}</code></pre>\n<p>相当于</p>\n<pre><code class="language-scss">background-color: #ccc;\nbackground-repeat: no-repeat;\nbackground-size: cover;</code></pre>\n<p>还可以这么写：</p>\n<pre><code class="language-scss"> border: 1px solid #ccc {\n      left: 0px;\n      right: 0px;\n  }</code></pre>\n</li>\n</ul>\n', '2019-08-22 16:27:25', '2019-04-29 15:21:03', '2019-08-22 16:54:21'),
	(9,'html5 新特性', 2, '### - HTML5新特性\r\n\r\n---\r\n\r\n- **mathML**\r\n\r\n  - 是一种数学标记语言，是一种基于xml的标准，用来书写互联网上书写数学公式和符号的标志语言：\r\n\r\n    ![效果图](D:\\Myfile\\MyBlog\\mathML.png)\r\n\r\n- **拖放**\r\n\r\n  ![](D:\\Myfile\\MyBlog\\tuofang.gif)\r\n\r\n- **获取用户的定位**\r\n\r\n- **播放视频(video)**\r\n\r\n- **播放音频(audio)**\r\n\r\n- **新增了input输入类型**\r\n\r\n  - color\r\n\r\n  ![](D:\\Myfile\\MyBlog\\input输入类型.png)\r\n\r\n  - date、datetime、datetime-local、email、month、number、range、search、tel、time、url、week\r\n\r\n- **新增了表单元素**（觉得后面两个无卵用）\r\n\r\n  - datalist(*可选列表和输入提示*)、keygen(*元素的作用是提供一种验证用户的可靠方法*)、output(*用于不同类型的输出，可在表单上写oninput计算公式，实时更新计算结果*)\r\n\r\n- **新增表单（form、input）属性**\r\n\r\n  ![](D:\\Myfile\\MyBlog\\新增form-input属性.png)\r\n\r\n  - step（没截到图）\r\n\r\n- **HTML5 web 储存**\r\n\r\n  - 与cookie对比：\r\n    - cookie大小上线为4kb，web 可以存4~5M\r\n    - cookie每次http请求都携带，不安全。\r\n    - web性能比cookie高\r\n\r\n- **web SQL**\r\n\r\n- **web应用程序缓存**\r\n\r\n  - web应用可以进行缓存，在没有网络时也可以访问，带来的三个优势：\r\n    - 离线浏览 - 用户可在应用离线时使用它们\r\n    - 速度 - 已缓存资源加载得更快\r\n    - 减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。\r\n\r\n- **web Workers**\r\n\r\n  - web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。\r\n\r\n- ', '- HTML5新特性\n\n\nmathML\n\n是一种数学标记语言，是一种基于xml的标准，用来书写互联网上书写数学公式和符号的标志语言：\n\n\n\n\n拖放\n\n\n获取用户的定位\n\n播放视频(video)\n\n播放音频(audio)\n\n新增了input输入类型\n\ncolor\n\n\n\ndate、datetime、datetime-local、email、month、number、range、search、tel、time、url、week\n\n\n新增了表单元素（觉得后面两个无卵用）\n\ndatalist(可选列表和输入提示)、keygen(元素的作用是提供一种验证用户的可靠方法)、output(用于不同类型的输出，可在表单上写oninput计算公式，实时更新计算结果)\n\n\n新增表单（form、input）属性\n\n\nstep（没截到图）\n\n\nHTML5 web 储存\n\n与cookie对比：\ncookie大小上线为4kb，web 可以存4~5M\ncookie每次http请求都携带，不安全。\nweb性能比cookie高\n\n\n\n\nweb SQL\n\nweb应用程序缓存\n\nweb应用可以进行缓存，在没有网络时也可以访问，带来的三个优势：\n离线浏览 - 用户可在应用离线时使用它们\n速度 - 已缓存资源加载得更快\n减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。\n\n\n\n\nweb Workers\n\nweb worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。\n\n\n\n\n', '<h3 id="--html5新特性">- HTML5新特性</h3>\n<hr>\n<ul>\n<li><p><strong>mathML</strong></p>\n<ul>\n<li><p>是一种数学标记语言，是一种基于xml的标准，用来书写互联网上书写数学公式和符号的标志语言：</p>\n<p><img src="D:%5CMyfile%5CMyBlog%5CmathML.png" alt="效果图"></p>\n</li>\n</ul>\n</li>\n<li><p><strong>拖放</strong></p>\n<p><img src="D:%5CMyfile%5CMyBlog%5Ctuofang.gif" alt=""></p>\n</li>\n<li><p><strong>获取用户的定位</strong></p>\n</li>\n<li><p><strong>播放视频(video)</strong></p>\n</li>\n<li><p><strong>播放音频(audio)</strong></p>\n</li>\n<li><p><strong>新增了input输入类型</strong></p>\n<ul>\n<li>color</li>\n</ul>\n<p><img src="D:%5CMyfile%5CMyBlog%5Cinput%E8%BE%93%E5%85%A5%E7%B1%BB%E5%9E%8B.png" alt=""></p>\n<ul>\n<li>date、datetime、datetime-local、email、month、number、range、search、tel、time、url、week</li>\n</ul>\n</li>\n<li><p><strong>新增了表单元素</strong>（觉得后面两个无卵用）</p>\n<ul>\n<li>datalist(<em>可选列表和输入提示</em>)、keygen(<em>元素的作用是提供一种验证用户的可靠方法</em>)、output(<em>用于不同类型的输出，可在表单上写oninput计算公式，实时更新计算结果</em>)</li>\n</ul>\n</li>\n<li><p><strong>新增表单（form、input）属性</strong></p>\n<p><img src="D:%5CMyfile%5CMyBlog%5C%E6%96%B0%E5%A2%9Eform-input%E5%B1%9E%E6%80%A7.png" alt=""></p>\n<ul>\n<li>step（没截到图）</li>\n</ul>\n</li>\n<li><p><strong>HTML5 web 储存</strong></p>\n<ul>\n<li>与cookie对比：<ul>\n<li>cookie大小上线为4kb，web 可以存4~5M</li>\n<li>cookie每次http请求都携带，不安全。</li>\n<li>web性能比cookie高</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>web SQL</strong></p>\n</li>\n<li><p><strong>web应用程序缓存</strong></p>\n<ul>\n<li>web应用可以进行缓存，在没有网络时也可以访问，带来的三个优势：<ul>\n<li>离线浏览 - 用户可在应用离线时使用它们</li>\n<li>速度 - 已缓存资源加载得更快</li>\n<li>减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>web Workers</strong></p>\n<ul>\n<li>web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。</li>\n</ul>\n</li>\n<li></li>\n</ul>\n', '2019-08-22 16:27:14', '2019-04-29 15:22:12', '2019-08-22 17:58:41'),
	(10,'关于自加和自减', 17, '自加和自减以前没怎么用做返回值，今天在学习ES6的Generator的时候突然意识到a++和++a的区别：\r\n\r\n```\r\nfunction* abc（）{\r\n	let a = 1;\r\n	yield a++;   \r\n}\r\n\r\nlet g = abc();\r\n \r\nconsole.log(g.next());\r\n```\r\n以上打印结果为：**1**；\r\n\r\n但是如果换成 ***yield ++a*** 的话，打印的结果是：**2**；\r\n\r\n\r\n***\r\n**总结**：++a和a++都是自加，其他地方都一样，但是当要把他们当作返回值来使用的话，略微有些许小的区别。\r\n\r\n|形式 ( a=1 )| 结果 | 返回值 |\r\n|--|--|--|\r\n| a++ | 2 | 1 |\r\n| ++a | 2 | 2 |\r\n| a- - | 0 | 1 |\r\n| - -a | 0 | 0 |', '自加和自减以前没怎么用做返回值，今天在学习ES6的Generator的时候突然意识到a++和++a的区别：\nfunction* abc（）{\n    let a = 1;\n    yield a++;   \n}\n\nlet g = abc();\n\nconsole.log(g.next());以上打印结果为：1；\n但是如果换成 yield ++a 的话，打印的结果是：2；\n\n总结：++a和a++都是自加，其他地方都一样，但是当要把他们当作返回值来使用的话，略微有些许小的区别。\n\n\n\n形式 ( a=1 )\n结果\n返回值\n\n\n\na++\n2\n1\n\n\n++a\n2\n2\n\n\na- -\n0\n1\n\n\n- -a\n0\n0\n\n\n', '<p>自加和自减以前没怎么用做返回值，今天在学习ES6的Generator的时候突然意识到a++和++a的区别：</p>\n<pre><code>function* abc（）{\n    let a = 1;\n    yield a++;   \n}\n\nlet g = abc();\n\nconsole.log(g.next());</code></pre><p>以上打印结果为：<strong>1</strong>；</p>\n<p>但是如果换成 <strong><em>yield ++a</em></strong> 的话，打印的结果是：<strong>2</strong>；</p>\n<hr>\n<p><strong>总结</strong>：++a和a++都是自加，其他地方都一样，但是当要把他们当作返回值来使用的话，略微有些许小的区别。</p>\n<table>\n<thead>\n<tr>\n<th>形式 ( a=1 )</th>\n<th>结果</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>a++</td>\n<td>2</td>\n<td>1</td>\n</tr>\n<tr>\n<td>++a</td>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>a- -</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>- -a</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody></table>\n', '2019-08-23 09:53:03', '2019-04-29 15:23:14', '2019-08-23 09:53:03'),
	(11,'校园+ -- 互联网+校园生态 企划案', 56, '[TOC]\r\n\r\n# 校园+ -- 互联网+校园生态 企划案\r\n\r\n## 设计理念\r\n\r\n**校园+**是运用互联网技术对散落在四处的校园功能的整合，运用**积分制**[^1]的新特性，产生**相互共享**[^2]的新的运作形式，以此刺激同学的学习、实践、互帮互助行为，同时也方便校方对各方活动的记录，管控、和指导作用。\r\n\r\n## 产品概要\r\n\r\n### 产品框架\r\n\r\n见附件1。\r\n\r\n### 产品差异\r\n\r\n#### 差异\r\n\r\n相较于我们接触过的**易班**等校园助手软件，**校园+**更加注重于实际生活的实用性和便捷性。\r\n\r\n在我们的意见采集中，易班等校园助手软件更多的只是在刚入学时进行下载和初步的使用，因为其功能表面化，与师生的实际生活相差较大。软件功能侧重于管理而不是服务，故**校园+**的设计方案应运而生。\r\n\r\n####　优势\r\n\r\n##### 产品定位\r\n\r\n**校园+**的产品定位我们由传统的**管理型**校园助手变更为**服务+型**，即以服务带动管理和督导。\r\n\r\n##### 产品目标\r\n\r\n我们将以产品的使用体验作为首要考虑的目标，实现真正方便师生的生产生活，以促进校园生活便捷化，人性化。\r\n\r\n### 产品预期\r\n\r\n#### 校方\r\n\r\n对学生生活学习状态的了解、掌握、统计。\r\n\r\n#### 学生\r\n\r\n生活学习方面的快捷、便利。\r\n\r\n#### 共享\r\n\r\n运用大学的人力资源实现**相互共享**的生产生活方式。\r\n\r\n#### 积分制\r\n\r\n使用校园生活积分制度实现易纠纷问题的简易化（图书馆占座、活动教室申请等），刺激学生的在校活跃度。\r\n\r\n### 工期时长\r\n\r\n总工程预计时长**3-7**年，用以建立完整的校园生态圈。\r\n\r\n## 设计初衷\r\n\r\n本产品设计以解决以下问题\r\n\r\n### 学生\r\n\r\n* 计算机语言课程作业依然依靠手写或试验报告的纸质方式交付老师批改审阅，违背语言需实际上机操作的问题。\r\n* 自习室管理较为自由，学生无法了解自习室情况，常出现在寻找合适自习室上花费太长时间。\r\n* 图书馆座位使用情况无明细，常出现坐满白跑的情况。\r\n* 硬性考勤制度空白，只是单纯依赖老师、辅导员的点名，迟、旷、早退行为较为普遍\r\n* 专业培养计划、学位证授予标准等相关标准查询和理解较为困难，对自我的学分修识进度没有把握。\r\n* 学生对相应老师资质、专业方向、教风等无认知渠道。\r\n* 对于相关老师的教学质量、教风质量无匿名评定渠道。\r\n* 校方相关通知依靠层层通知，易出现错传、漏传等情况。\r\n* 素拓管理疏忽和漏洞明显\r\n* ···\r\n\r\n### 教职工\r\n\r\n* 教师对学生学习情况了解较少。\r\n* 辅导员对学生生活情况了解较少。\r\n* 教职工应到情况只由学习委员签到表进行审核管理，迟、退情况无监管方案。\r\n* 教师教学质量监管目前出台政策聊胜于无，无有效渠道和策略。\r\n* 在部分教职工享有特殊待遇校园生活方面，监管松懈，易出现冒充领取、享受等情况。\r\n* 教师的答疑、指导时间较少。\r\n* 教师的科研活动本科学生了解情况不佳。\r\n* ···\r\n\r\n### 校园生活\r\n\r\n* 校园水电缴费功能较为分散。\r\n* 公共设施使用情况和损坏情况无公示报备。\r\n* 校园交通随意性较差。\r\n* 校园生活的新生引导工作又空缺。\r\n* 相关功能科室和地点无引导。\r\n* 校史、人文宣传工作繁重。\r\n* ···\r\n\r\n## 设计亮点\r\n\r\n### 积分制\r\n\r\n我们在**校园+**中引入积分制的概念，对师生的日常活动，如上课考勤、休闲体育活动、考试成绩、实践拓展、公益活动等等有益的行为，通过积分制和相互共享的结合，以刺激学生的在校活跃度。\r\n\r\n### 相互共享\r\n\r\n此概念即是以大学中受众人群密集且活动范围大致相同提出的概念，即以悬赏任务形式进行的共享资源。和积分制的相辅相成用以打造校园内的流通机制，实现自我价值、他人价值、集体价值的共享。\r\n\r\n## 设计思路\r\n\r\n### 新生指引\r\n\r\n新生指引旨在通过类学习手册的方式实现“自助式”大学生活的融入和适应，其中应包括：\r\n\r\n#### 报道流程及地点\r\n\r\n指引刚入校新生如何完成报道和相关手续的办理流程，因大学报到手续相较于之前较为复杂，需到达不同地点缴纳费用或办理业务。此板块向刚入校新生展示基本报道操作流程，使新生更好的完成报道工作。\r\n\r\n#### 基本校舍地图和公寓情况\r\n\r\n形成校园电子地图，使新生更快了解校园相关建筑功能及位置，其电子地图功用也可为其他功能复用。\r\n\r\n#### 专业相关简介及咨询服务\r\n\r\n对于新生的专业学习方向、未来就业趋势、相关发展方向等专业相关知识和前景对于新生来说难以理解和掌握，专业相关的咨询服务和专业培养方案的指导可以使自己对于本专业点的定位更加清晰明了。\r\n\r\n#### 基本生活物品购买建议指南\r\n\r\n对新生入学所必须的生活物品的购买建议。\r\n\r\n#### 新生须知\r\n\r\n对校规的大致说明和校方对新生的任务规划。\r\n\r\n#### 我的大学\r\n\r\n该板块旨在对新生的校史宣传和校园的人文建设进行指导宣传。\r\n\r\n### 教学\r\n\r\n#### 课表\r\n\r\n实现便携式的电子课表功能，不在为了电子课表单独安装软件使用，实现课表挂件功能。形成课程+时间+地点的课程提醒方式。\r\n\r\n#### 考勤\r\n\r\n我们希望达成课程到勤的打卡功能，节省物力人力单独进行学分建设的考勤管理。同时也有效的记录学生在校的活跃度和对相应课程的反馈。\r\n\r\n#### 成绩\r\n\r\n繁琐的成绩查询是现在每次期末考试结束后的一个让人头痛的事情，我们希望对成绩实现全员的二次查询，对查询结果进行外网访问包装。使每个人通过自己的软件即可方便快捷的直接查询本人的成绩相关数据。\r\n\r\n### 校园生活\r\n\r\n#### 水电缴费\r\n\r\n掌上缴费，实时查询、缴纳宿舍水电。\r\n\r\n#### 公共设施使用\r\n\r\n我们希望达成对公共设施和公共场地的监管功能，实现场地、资源的可用公示化，预约化。便捷师生的生活活动。\r\n\r\n#### 校园行\r\n\r\n增加有关于校园及附近游玩的自助游玩结伴策略，使学生在大学生活又渠道拓展社交人际圈子、开拓眼界、减少单独出行的概率、增加安全性。\r\n\r\n### 共享\r\n\r\n#### 共享单车\r\n\r\n建立仅限于校内的共享单车系统，以货币/积分的形式进行消费。实现校内交通出行的便捷化，随意化。同时减少校内非法机动车、电瓶车数量，降低校内交通安全隐患。绿色出行。\r\n\r\n#### 赏金任务\r\n\r\n 建立范围包含全校的赏金任务的互助系统，包含外卖、快递代取等一系列互助任务，使用积分作为任务奖励，实现PToP形式的在线互助平台。\r\n\r\n## 设计方案\r\n\r\n### 线上编译系统\r\n\r\n我们初步决定使用线上编译系作为我们的校园生态的切入点，线上编译系统即对计算机语言课程的课后上机代码编写进行强化，同时方便对实验部分的管理和考核。\r\n\r\n###　校园生态系统\r\n\r\n第二步的开发，也同时是整个软件的核心部分，校园生态系统的整体建立即标志着**校园+**生态的建立和完善。\r\n\r\n## 开发方案\r\n\r\n### 一期\r\n\r\n#### 预计工期\r\n\r\n4-6个月\r\n\r\n#### 工期内容\r\n\r\n* 线上编译系统的建立和上线使用\r\n* 校方数据对接\r\n\r\n#### 预期结果\r\n\r\n* 线上编译系统的正常投入使用\r\n* 对用户信息的初始化，系统化\r\n\r\n###  二期\r\n\r\n#### 预计工期\r\n\r\n1-2年\r\n\r\n#### 工期内容\r\n\r\n* 校园生态系统的初步功能实现\r\n* app制作\r\n* 上线测试基本功能\r\n* 反馈迭代\r\n\r\n#### 预期成果\r\n\r\n* 校园生态系统雏形\r\n* 实现app的基本功能\r\n* 进行app的校园宣传活动\r\n\r\n###  三 - 五期\r\n\r\n#### 预计工期\r\n\r\n2年\r\n\r\n#### 工期内容\r\n\r\n* 正式建立以积分制为基础的校园共享模式\r\n* 完善相关硬件支持\r\n* 校方全面支持\r\n* 全面推行使用\r\n* 反馈迭代\r\n\r\n#### 预计成果\r\n\r\n* 实现校园生态系统正常运行\r\n* 使整体的校园模式按预想正常运作\r\n\r\n### 六 - 八期\r\n\r\n#### 预计工期\r\n\r\n1-2年\r\n\r\n#### 工期内容\r\n\r\n* 完善**校园+**生态环境\r\n* 进行硬件投入和联动\r\n* 实现积分制的校园生活全覆盖\r\n* 多系统联动\r\n* 升级产品的安全系数至发布级别\r\n* 进行多厂商、多平台的联动结合\r\n* 反馈迭代\r\n\r\n#### 预计成果\r\n\r\n* 产品进入可发布状态\r\n* 实现盈利和对外销售\r\n* 优化后台管控统计\r\n* 实现多联动、高聚合、丰富生态的校园互联生态圈\r\n\r\n### 后期维护升级\r\n\r\n#### 硬件维护升级\r\n\r\n* 服务器、数据库维护升级\r\n* 硬件设施维护升级\r\n\r\n#### 软件维护升级\r\n\r\n* 防火墙维护升级\r\n* 软件使用友好度升级\r\n* 软件功能性升级\r\n* 生态管控策略优化升级\r\n\r\n## 关于我们 -- SharpFactory\r\n\r\n### 性质\r\n\r\n工作室目前性质为**非盈利性**技术工作室，进行软件、网站的学习、开发。 \r\n\r\n### 历史\r\n\r\nSharpFactory成立与2017年，当时为贵州大学、贵州名族大学的15级及16级几名热爱计算机的学长组建。经龙见老师的技术和资金支持得以发展和扩大。\r\n\r\n后经工作室2018年第一届招收形成现在的工作室人员结构和管理结构。\r\n\r\n### 生态\r\n\r\n#### 人员\r\n\r\n##### 成员\r\n\r\n现工作室成员共8名，均来自贵州大学，人员分布与不同学院。\r\n\r\n##### 支持\r\n\r\n工作室技术及资金支持来自龙剑老师及贵阳中测技术有限公司。\r\n\r\n#### 场地\r\n\r\n工作室场地现位于贵安经济数字产业园。\r\n\r\n#### 工作室运作\r\n\r\n##### 招收\r\n\r\n工作室每年以零门槛面向贵阳所有大学招收对编程感兴趣的同学，由工作室成员进行无偿培训，后进入项目进行实际生产环境的开发学习工作。\r\n\r\n##### 产出\r\n\r\n工作室实际产出为web开发和软件开发，其来源为：\r\n\r\n* 自我需求\r\n* 公司需求\r\n* 内部成员灵感\r\n* 外包项目\r\n\r\n### 目标\r\n\r\n* 培养新进人才\r\n* 实现综合开发\r\n* 拓宽工作室业务范围\r\n* 实现高效的自我产出\r\n* 实现大型产品的开发、运作、维护\r\n\r\n\r\n\r\n[^1]:以积分的获取和消费实现对学生校园生活的良性引导和管控\r\n[^2]:	即环境中每个共享的受体也是共享业务的提供者', '[TOC]\n校园+ -- 互联网+校园生态 企划案\n设计理念\n校园+是运用互联网技术对散落在四处的校园功能的整合，运用积分制^1的新特性，产生相互共享^2的新的运作形式，以此刺激同学的学习、实践、互帮互助行为，同时也方便校方对各方活动的记录，管控、和指导作用。\n产品概要\n产品框架\n见附件1。\n产品差异\n差异\n相较于我们接触过的易班等校园助手软件，校园+更加注重于实际生活的实用性和便捷性。\n在我们的意见采集中，易班等校园助手软件更多的只是在刚入学时进行下载和初步的使用，因为其功能表面化，与师生的实际生活相差较大。软件功能侧重于管理而不是服务，故校园+的设计方案应运而生。\n####　优势\n产品定位\n校园+的产品定位我们由传统的管理型校园助手变更为服务+型，即以服务带动管理和督导。\n产品目标\n我们将以产品的使用体验作为首要考虑的目标，实现真正方便师生的生产生活，以促进校园生活便捷化，人性化。\n产品预期\n校方\n对学生生活学习状态的了解、掌握、统计。\n学生\n生活学习方面的快捷、便利。\n共享\n运用大学的人力资源实现相互共享的生产生活方式。\n积分制\n使用校园生活积分制度实现易纠纷问题的简易化（图书馆占座、活动教室申请等），刺激学生的在校活跃度。\n工期时长\n总工程预计时长3-7年，用以建立完整的校园生态圈。\n设计初衷\n本产品设计以解决以下问题\n学生\n\n计算机语言课程作业依然依靠手写或试验报告的纸质方式交付老师批改审阅，违背语言需实际上机操作的问题。\n自习室管理较为自由，学生无法了解自习室情况，常出现在寻找合适自习室上花费太长时间。\n图书馆座位使用情况无明细，常出现坐满白跑的情况。\n硬性考勤制度空白，只是单纯依赖老师、辅导员的点名，迟、旷、早退行为较为普遍\n专业培养计划、学位证授予标准等相关标准查询和理解较为困难，对自我的学分修识进度没有把握。\n学生对相应老师资质、专业方向、教风等无认知渠道。\n对于相关老师的教学质量、教风质量无匿名评定渠道。\n校方相关通知依靠层层通知，易出现错传、漏传等情况。\n素拓管理疏忽和漏洞明显\n···\n\n教职工\n\n教师对学生学习情况了解较少。\n辅导员对学生生活情况了解较少。\n教职工应到情况只由学习委员签到表进行审核管理，迟、退情况无监管方案。\n教师教学质量监管目前出台政策聊胜于无，无有效渠道和策略。\n在部分教职工享有特殊待遇校园生活方面，监管松懈，易出现冒充领取、享受等情况。\n教师的答疑、指导时间较少。\n教师的科研活动本科学生了解情况不佳。\n···\n\n校园生活\n\n校园水电缴费功能较为分散。\n公共设施使用情况和损坏情况无公示报备。\n校园交通随意性较差。\n校园生活的新生引导工作又空缺。\n相关功能科室和地点无引导。\n校史、人文宣传工作繁重。\n···\n\n设计亮点\n积分制\n我们在校园+中引入积分制的概念，对师生的日常活动，如上课考勤、休闲体育活动、考试成绩、实践拓展、公益活动等等有益的行为，通过积分制和相互共享的结合，以刺激学生的在校活跃度。\n相互共享\n此概念即是以大学中受众人群密集且活动范围大致相同提出的概念，即以悬赏任务形式进行的共享资源。和积分制的相辅相成用以打造校园内的流通机制，实现自我价值、他人价值、集体价值的共享。\n设计思路\n新生指引\n新生指引旨在通过类学习手册的方式实现“自助式”大学生活的融入和适应，其中应包括：\n报道流程及地点\n指引刚入校新生如何完成报道和相关手续的办理流程，因大学报到手续相较于之前较为复杂，需到达不同地点缴纳费用或办理业务。此板块向刚入校新生展示基本报道操作流程，使新生更好的完成报道工作。\n基本校舍地图和公寓情况\n形成校园电子地图，使新生更快了解校园相关建筑功能及位置，其电子地图功用也可为其他功能复用。\n专业相关简介及咨询服务\n对于新生的专业学习方向、未来就业趋势、相关发展方向等专业相关知识和前景对于新生来说难以理解和掌握，专业相关的咨询服务和专业培养方案的指导可以使自己对于本专业点的定位更加清晰明了。\n基本生活物品购买建议指南\n对新生入学所必须的生活物品的购买建议。\n新生须知\n对校规的大致说明和校方对新生的任务规划。\n我的大学\n该板块旨在对新生的校史宣传和校园的人文建设进行指导宣传。\n教学\n课表\n实现便携式的电子课表功能，不在为了电子课表单独安装软件使用，实现课表挂件功能。形成课程+时间+地点的课程提醒方式。\n考勤\n我们希望达成课程到勤的打卡功能，节省物力人力单独进行学分建设的考勤管理。同时也有效的记录学生在校的活跃度和对相应课程的反馈。\n成绩\n繁琐的成绩查询是现在每次期末考试结束后的一个让人头痛的事情，我们希望对成绩实现全员的二次查询，对查询结果进行外网访问包装。使每个人通过自己的软件即可方便快捷的直接查询本人的成绩相关数据。\n校园生活\n水电缴费\n掌上缴费，实时查询、缴纳宿舍水电。\n公共设施使用\n我们希望达成对公共设施和公共场地的监管功能，实现场地、资源的可用公示化，预约化。便捷师生的生活活动。\n校园行\n增加有关于校园及附近游玩的自助游玩结伴策略，使学生在大学生活又渠道拓展社交人际圈子、开拓眼界、减少单独出行的概率、增加安全性。\n共享\n共享单车\n建立仅限于校内的共享单车系统，以货币/积分的形式进行消费。实现校内交通出行的便捷化，随意化。同时减少校内非法机动车、电瓶车数量，降低校内交通安全隐患。绿色出行。\n赏金任务\n 建立范围包含全校的赏金任务的互助系统，包含外卖、快递代取等一系列互助任务，使用积分作为任务奖励，实现PToP形式的在线互助平台。\n设计方案\n线上编译系统\n我们初步决定使用线上编译系作为我们的校园生态的切入点，线上编译系统即对计算机语言课程的课后上机代码编写进行强化，同时方便对实验部分的管理和考核。\n###　校园生态系统\n第二步的开发，也同时是整个软件的核心部分，校园生态系统的整体建立即标志着校园+生态的建立和完善。\n开发方案\n一期\n预计工期\n4-6个月\n工期内容\n\n线上编译系统的建立和上线使用\n校方数据对接\n\n预期结果\n\n线上编译系统的正常投入使用\n对用户信息的初始化，系统化\n\n二期\n预计工期\n1-2年\n工期内容\n\n校园生态系统的初步功能实现\napp制作\n上线测试基本功能\n反馈迭代\n\n预期成果\n\n校园生态系统雏形\n实现app的基本功能\n进行app的校园宣传活动\n\n三 - 五期\n预计工期\n2年\n工期内容\n\n正式建立以积分制为基础的校园共享模式\n完善相关硬件支持\n校方全面支持\n全面推行使用\n反馈迭代\n\n预计成果\n\n实现校园生态系统正常运行\n使整体的校园模式按预想正常运作\n\n六 - 八期\n预计工期\n1-2年\n工期内容\n\n完善校园+生态环境\n进行硬件投入和联动\n实现积分制的校园生活全覆盖\n多系统联动\n升级产品的安全系数至发布级别\n进行多厂商、多平台的联动结合\n反馈迭代\n\n预计成果\n\n产品进入可发布状态\n实现盈利和对外销售\n优化后台管控统计\n实现多联动、高聚合、丰富生态的校园互联生态圈\n\n后期维护升级\n硬件维护升级\n\n服务器、数据库维护升级\n硬件设施维护升级\n\n软件维护升级\n\n防火墙维护升级\n软件使用友好度升级\n软件功能性升级\n生态管控策略优化升级\n\n关于我们 -- SharpFactory\n性质\n工作室目前性质为非盈利性技术工作室，进行软件、网站的学习、开发。 \n历史\nSharpFactory成立与2017年，当时为贵州大学、贵州名族大学的15级及16级几名热爱计算机的学长组建。经龙见老师的技术和资金支持得以发展和扩大。\n后经工作室2018年第一届招收形成现在的工作室人员结构和管理结构。\n生态\n人员\n成员\n现工作室成员共8名，均来自贵州大学，人员分布与不同学院。\n支持\n工作室技术及资金支持来自龙剑老师及贵阳中测技术有限公司。\n场地\n工作室场地现位于贵安经济数字产业园。\n工作室运作\n招收\n工作室每年以零门槛面向贵阳所有大学招收对编程感兴趣的同学，由工作室成员进行无偿培训，后进入项目进行实际生产环境的开发学习工作。\n产出\n工作室实际产出为web开发和软件开发，其来源为：\n\n自我需求\n公司需求\n内部成员灵感\n外包项目\n\n目标\n\n培养新进人才\n实现综合开发\n拓宽工作室业务范围\n实现高效的自我产出\n实现大型产品的开发、运作、维护\n\n', '<p>[TOC]</p>\n<h1 id="校园----互联网校园生态-企划案">校园+ -- 互联网+校园生态 企划案</h1>\n<h2 id="设计理念">设计理念</h2>\n<p><strong>校园+</strong>是运用互联网技术对散落在四处的校园功能的整合，运用<strong>积分制</strong><a href="%E4%BB%A5%E7%A7%AF%E5%88%86%E7%9A%84%E8%8E%B7%E5%8F%96%E5%92%8C%E6%B6%88%E8%B4%B9%E5%AE%9E%E7%8E%B0%E5%AF%B9%E5%AD%A6%E7%94%9F%E6%A0%A1%E5%9B%AD%E7%94%9F%E6%B4%BB%E7%9A%84%E8%89%AF%E6%80%A7%E5%BC%95%E5%AF%BC%E5%92%8C%E7%AE%A1%E6%8E%A7">^1</a>的新特性，产生<strong>相互共享</strong><a href="%E5%8D%B3%E7%8E%AF%E5%A2%83%E4%B8%AD%E6%AF%8F%E4%B8%AA%E5%85%B1%E4%BA%AB%E7%9A%84%E5%8F%97%E4%BD%93%E4%B9%9F%E6%98%AF%E5%85%B1%E4%BA%AB%E4%B8%9A%E5%8A%A1%E7%9A%84%E6%8F%90%E4%BE%9B%E8%80%85">^2</a>的新的运作形式，以此刺激同学的学习、实践、互帮互助行为，同时也方便校方对各方活动的记录，管控、和指导作用。</p>\n<h2 id="产品概要">产品概要</h2>\n<h3 id="产品框架">产品框架</h3>\n<p>见附件1。</p>\n<h3 id="产品差异">产品差异</h3>\n<h4 id="差异">差异</h4>\n<p>相较于我们接触过的<strong>易班</strong>等校园助手软件，<strong>校园+</strong>更加注重于实际生活的实用性和便捷性。</p>\n<p>在我们的意见采集中，易班等校园助手软件更多的只是在刚入学时进行下载和初步的使用，因为其功能表面化，与师生的实际生活相差较大。软件功能侧重于管理而不是服务，故<strong>校园+</strong>的设计方案应运而生。</p>\n<p>####　优势</p>\n<h5 id="产品定位">产品定位</h5>\n<p><strong>校园+</strong>的产品定位我们由传统的<strong>管理型</strong>校园助手变更为<strong>服务+型</strong>，即以服务带动管理和督导。</p>\n<h5 id="产品目标">产品目标</h5>\n<p>我们将以产品的使用体验作为首要考虑的目标，实现真正方便师生的生产生活，以促进校园生活便捷化，人性化。</p>\n<h3 id="产品预期">产品预期</h3>\n<h4 id="校方">校方</h4>\n<p>对学生生活学习状态的了解、掌握、统计。</p>\n<h4 id="学生">学生</h4>\n<p>生活学习方面的快捷、便利。</p>\n<h4 id="共享">共享</h4>\n<p>运用大学的人力资源实现<strong>相互共享</strong>的生产生活方式。</p>\n<h4 id="积分制">积分制</h4>\n<p>使用校园生活积分制度实现易纠纷问题的简易化（图书馆占座、活动教室申请等），刺激学生的在校活跃度。</p>\n<h3 id="工期时长">工期时长</h3>\n<p>总工程预计时长<strong>3-7</strong>年，用以建立完整的校园生态圈。</p>\n<h2 id="设计初衷">设计初衷</h2>\n<p>本产品设计以解决以下问题</p>\n<h3 id="学生-1">学生</h3>\n<ul>\n<li>计算机语言课程作业依然依靠手写或试验报告的纸质方式交付老师批改审阅，违背语言需实际上机操作的问题。</li>\n<li>自习室管理较为自由，学生无法了解自习室情况，常出现在寻找合适自习室上花费太长时间。</li>\n<li>图书馆座位使用情况无明细，常出现坐满白跑的情况。</li>\n<li>硬性考勤制度空白，只是单纯依赖老师、辅导员的点名，迟、旷、早退行为较为普遍</li>\n<li>专业培养计划、学位证授予标准等相关标准查询和理解较为困难，对自我的学分修识进度没有把握。</li>\n<li>学生对相应老师资质、专业方向、教风等无认知渠道。</li>\n<li>对于相关老师的教学质量、教风质量无匿名评定渠道。</li>\n<li>校方相关通知依靠层层通知，易出现错传、漏传等情况。</li>\n<li>素拓管理疏忽和漏洞明显</li>\n<li>···</li>\n</ul>\n<h3 id="教职工">教职工</h3>\n<ul>\n<li>教师对学生学习情况了解较少。</li>\n<li>辅导员对学生生活情况了解较少。</li>\n<li>教职工应到情况只由学习委员签到表进行审核管理，迟、退情况无监管方案。</li>\n<li>教师教学质量监管目前出台政策聊胜于无，无有效渠道和策略。</li>\n<li>在部分教职工享有特殊待遇校园生活方面，监管松懈，易出现冒充领取、享受等情况。</li>\n<li>教师的答疑、指导时间较少。</li>\n<li>教师的科研活动本科学生了解情况不佳。</li>\n<li>···</li>\n</ul>\n<h3 id="校园生活">校园生活</h3>\n<ul>\n<li>校园水电缴费功能较为分散。</li>\n<li>公共设施使用情况和损坏情况无公示报备。</li>\n<li>校园交通随意性较差。</li>\n<li>校园生活的新生引导工作又空缺。</li>\n<li>相关功能科室和地点无引导。</li>\n<li>校史、人文宣传工作繁重。</li>\n<li>···</li>\n</ul>\n<h2 id="设计亮点">设计亮点</h2>\n<h3 id="积分制-1">积分制</h3>\n<p>我们在<strong>校园+</strong>中引入积分制的概念，对师生的日常活动，如上课考勤、休闲体育活动、考试成绩、实践拓展、公益活动等等有益的行为，通过积分制和相互共享的结合，以刺激学生的在校活跃度。</p>\n<h3 id="相互共享">相互共享</h3>\n<p>此概念即是以大学中受众人群密集且活动范围大致相同提出的概念，即以悬赏任务形式进行的共享资源。和积分制的相辅相成用以打造校园内的流通机制，实现自我价值、他人价值、集体价值的共享。</p>\n<h2 id="设计思路">设计思路</h2>\n<h3 id="新生指引">新生指引</h3>\n<p>新生指引旨在通过类学习手册的方式实现“自助式”大学生活的融入和适应，其中应包括：</p>\n<h4 id="报道流程及地点">报道流程及地点</h4>\n<p>指引刚入校新生如何完成报道和相关手续的办理流程，因大学报到手续相较于之前较为复杂，需到达不同地点缴纳费用或办理业务。此板块向刚入校新生展示基本报道操作流程，使新生更好的完成报道工作。</p>\n<h4 id="基本校舍地图和公寓情况">基本校舍地图和公寓情况</h4>\n<p>形成校园电子地图，使新生更快了解校园相关建筑功能及位置，其电子地图功用也可为其他功能复用。</p>\n<h4 id="专业相关简介及咨询服务">专业相关简介及咨询服务</h4>\n<p>对于新生的专业学习方向、未来就业趋势、相关发展方向等专业相关知识和前景对于新生来说难以理解和掌握，专业相关的咨询服务和专业培养方案的指导可以使自己对于本专业点的定位更加清晰明了。</p>\n<h4 id="基本生活物品购买建议指南">基本生活物品购买建议指南</h4>\n<p>对新生入学所必须的生活物品的购买建议。</p>\n<h4 id="新生须知">新生须知</h4>\n<p>对校规的大致说明和校方对新生的任务规划。</p>\n<h4 id="我的大学">我的大学</h4>\n<p>该板块旨在对新生的校史宣传和校园的人文建设进行指导宣传。</p>\n<h3 id="教学">教学</h3>\n<h4 id="课表">课表</h4>\n<p>实现便携式的电子课表功能，不在为了电子课表单独安装软件使用，实现课表挂件功能。形成课程+时间+地点的课程提醒方式。</p>\n<h4 id="考勤">考勤</h4>\n<p>我们希望达成课程到勤的打卡功能，节省物力人力单独进行学分建设的考勤管理。同时也有效的记录学生在校的活跃度和对相应课程的反馈。</p>\n<h4 id="成绩">成绩</h4>\n<p>繁琐的成绩查询是现在每次期末考试结束后的一个让人头痛的事情，我们希望对成绩实现全员的二次查询，对查询结果进行外网访问包装。使每个人通过自己的软件即可方便快捷的直接查询本人的成绩相关数据。</p>\n<h3 id="校园生活-1">校园生活</h3>\n<h4 id="水电缴费">水电缴费</h4>\n<p>掌上缴费，实时查询、缴纳宿舍水电。</p>\n<h4 id="公共设施使用">公共设施使用</h4>\n<p>我们希望达成对公共设施和公共场地的监管功能，实现场地、资源的可用公示化，预约化。便捷师生的生活活动。</p>\n<h4 id="校园行">校园行</h4>\n<p>增加有关于校园及附近游玩的自助游玩结伴策略，使学生在大学生活又渠道拓展社交人际圈子、开拓眼界、减少单独出行的概率、增加安全性。</p>\n<h3 id="共享-1">共享</h3>\n<h4 id="共享单车">共享单车</h4>\n<p>建立仅限于校内的共享单车系统，以货币/积分的形式进行消费。实现校内交通出行的便捷化，随意化。同时减少校内非法机动车、电瓶车数量，降低校内交通安全隐患。绿色出行。</p>\n<h4 id="赏金任务">赏金任务</h4>\n<p> 建立范围包含全校的赏金任务的互助系统，包含外卖、快递代取等一系列互助任务，使用积分作为任务奖励，实现PToP形式的在线互助平台。</p>\n<h2 id="设计方案">设计方案</h2>\n<h3 id="线上编译系统">线上编译系统</h3>\n<p>我们初步决定使用线上编译系作为我们的校园生态的切入点，线上编译系统即对计算机语言课程的课后上机代码编写进行强化，同时方便对实验部分的管理和考核。</p>\n<p>###　校园生态系统</p>\n<p>第二步的开发，也同时是整个软件的核心部分，校园生态系统的整体建立即标志着<strong>校园+</strong>生态的建立和完善。</p>\n<h2 id="开发方案">开发方案</h2>\n<h3 id="一期">一期</h3>\n<h4 id="预计工期">预计工期</h4>\n<p>4-6个月</p>\n<h4 id="工期内容">工期内容</h4>\n<ul>\n<li>线上编译系统的建立和上线使用</li>\n<li>校方数据对接</li>\n</ul>\n<h4 id="预期结果">预期结果</h4>\n<ul>\n<li>线上编译系统的正常投入使用</li>\n<li>对用户信息的初始化，系统化</li>\n</ul>\n<h3 id="二期">二期</h3>\n<h4 id="预计工期-1">预计工期</h4>\n<p>1-2年</p>\n<h4 id="工期内容-1">工期内容</h4>\n<ul>\n<li>校园生态系统的初步功能实现</li>\n<li>app制作</li>\n<li>上线测试基本功能</li>\n<li>反馈迭代</li>\n</ul>\n<h4 id="预期成果">预期成果</h4>\n<ul>\n<li>校园生态系统雏形</li>\n<li>实现app的基本功能</li>\n<li>进行app的校园宣传活动</li>\n</ul>\n<h3 id="三---五期">三 - 五期</h3>\n<h4 id="预计工期-2">预计工期</h4>\n<p>2年</p>\n<h4 id="工期内容-2">工期内容</h4>\n<ul>\n<li>正式建立以积分制为基础的校园共享模式</li>\n<li>完善相关硬件支持</li>\n<li>校方全面支持</li>\n<li>全面推行使用</li>\n<li>反馈迭代</li>\n</ul>\n<h4 id="预计成果">预计成果</h4>\n<ul>\n<li>实现校园生态系统正常运行</li>\n<li>使整体的校园模式按预想正常运作</li>\n</ul>\n<h3 id="六---八期">六 - 八期</h3>\n<h4 id="预计工期-3">预计工期</h4>\n<p>1-2年</p>\n<h4 id="工期内容-3">工期内容</h4>\n<ul>\n<li>完善<strong>校园+</strong>生态环境</li>\n<li>进行硬件投入和联动</li>\n<li>实现积分制的校园生活全覆盖</li>\n<li>多系统联动</li>\n<li>升级产品的安全系数至发布级别</li>\n<li>进行多厂商、多平台的联动结合</li>\n<li>反馈迭代</li>\n</ul>\n<h4 id="预计成果-1">预计成果</h4>\n<ul>\n<li>产品进入可发布状态</li>\n<li>实现盈利和对外销售</li>\n<li>优化后台管控统计</li>\n<li>实现多联动、高聚合、丰富生态的校园互联生态圈</li>\n</ul>\n<h3 id="后期维护升级">后期维护升级</h3>\n<h4 id="硬件维护升级">硬件维护升级</h4>\n<ul>\n<li>服务器、数据库维护升级</li>\n<li>硬件设施维护升级</li>\n</ul>\n<h4 id="软件维护升级">软件维护升级</h4>\n<ul>\n<li>防火墙维护升级</li>\n<li>软件使用友好度升级</li>\n<li>软件功能性升级</li>\n<li>生态管控策略优化升级</li>\n</ul>\n<h2 id="关于我们----sharpfactory">关于我们 -- SharpFactory</h2>\n<h3 id="性质">性质</h3>\n<p>工作室目前性质为<strong>非盈利性</strong>技术工作室，进行软件、网站的学习、开发。 </p>\n<h3 id="历史">历史</h3>\n<p>SharpFactory成立与2017年，当时为贵州大学、贵州名族大学的15级及16级几名热爱计算机的学长组建。经龙见老师的技术和资金支持得以发展和扩大。</p>\n<p>后经工作室2018年第一届招收形成现在的工作室人员结构和管理结构。</p>\n<h3 id="生态">生态</h3>\n<h4 id="人员">人员</h4>\n<h5 id="成员">成员</h5>\n<p>现工作室成员共8名，均来自贵州大学，人员分布与不同学院。</p>\n<h5 id="支持">支持</h5>\n<p>工作室技术及资金支持来自龙剑老师及贵阳中测技术有限公司。</p>\n<h4 id="场地">场地</h4>\n<p>工作室场地现位于贵安经济数字产业园。</p>\n<h4 id="工作室运作">工作室运作</h4>\n<h5 id="招收">招收</h5>\n<p>工作室每年以零门槛面向贵阳所有大学招收对编程感兴趣的同学，由工作室成员进行无偿培训，后进入项目进行实际生产环境的开发学习工作。</p>\n<h5 id="产出">产出</h5>\n<p>工作室实际产出为web开发和软件开发，其来源为：</p>\n<ul>\n<li>自我需求</li>\n<li>公司需求</li>\n<li>内部成员灵感</li>\n<li>外包项目</li>\n</ul>\n<h3 id="目标">目标</h3>\n<ul>\n<li>培养新进人才</li>\n<li>实现综合开发</li>\n<li>拓宽工作室业务范围</li>\n<li>实现高效的自我产出</li>\n<li>实现大型产品的开发、运作、维护</li>\n</ul>\n', '2019-08-24 12:47:24', '2019-04-29 15:24:44', '2019-08-24 12:47:24');
